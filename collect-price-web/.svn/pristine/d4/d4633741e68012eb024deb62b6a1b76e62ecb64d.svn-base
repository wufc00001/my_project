package com.chngc.collect.interceptor;




import com.alibaba.fastjson.JSONObject;
import com.chngc.collect.common.Constants;
import com.chngc.collect.service.CoreUserService;
import com.chngc.collect.vo.Permission;
import com.chngc.core.common.ResponseResult;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.PrintWriter;
import java.net.URLEncoder;
import java.util.Map;

@Slf4j
public class LoginControllerInterceptor extends HandlerInterceptorAdapter {
	@Autowired
	private CoreUserService coreUserService;
	@Override
	public boolean preHandle(HttpServletRequest request,
							 HttpServletResponse response, Object handler) throws Exception {

		HttpSession session = request.getSession(true);
		Object userId = session.getAttribute("userId");
		if (userId == null) {
			log.info("####没有登录,去登录页面####");
			ResponseResult result = new ResponseResult();
			response.setContentType("application/json; charset=UTF-8");
			result.setCode("01");
			result.setMsg("对不起，您还没有登录");
			PrintWriter out = response.getWriter();
			JSONObject obj = (JSONObject) JSONObject.toJSON(result);
			out.print(obj);
			out.close();
			return false;
		} else {
			log.info("####已经登录判断是否有访问权限####");
			Map<String,Boolean> permissionMap = (Map) session.getAttribute("components");
			// 判断访问是否有权限
			String permissionCode = request.getParameter("componentCode");
			Boolean permissionFlag = permissionMap.get(permissionCode);
			log.info("####已经登录####访问权限code####:"+permissionCode);
			if(permissionFlag == null || !permissionFlag){
				log.info("####已经登录####没有访问权限####");
				ResponseResult result = new ResponseResult();
				response.setContentType("application/json; charset=UTF-8");
				result.setCode("01");
				result.setMsg("对不起，您没有访问权限");
				PrintWriter out = response.getWriter();
				JSONObject obj = (JSONObject) JSONObject.toJSON(result);
				out.print(obj);
				out.close();
				return false;
			}
			return true;
		}
	}

	@Override
	public void postHandle(HttpServletRequest request,
						   HttpServletResponse response, Object handler,
						   ModelAndView modelAndView) throws Exception {
		super.postHandle(request, response, handler, modelAndView);
	}

	@Override
	public void afterCompletion(HttpServletRequest request,
								HttpServletResponse response, Object handler, Exception ex)
			throws Exception {
		super.afterCompletion(request, response, handler, ex);
	}
}
