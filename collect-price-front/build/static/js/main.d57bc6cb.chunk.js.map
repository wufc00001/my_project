{"version":3,"sources":["reducer/breadCrumb.js","reducer/nickname.js","reducer/switchMenu.js","reducer/collapse.js","store/index.js","config/menuList.js","components/NavLeft/index.js","components/NavHeader/index.js","components/NavBread/index.js","app.js","pages/welcome/index.js","pages/login/index.js","pages/keepsake/kind/search.js","pages/keepsake/kind/create.js","auth/index.js","imgUrl/index.js","pages/keepsake/kind/index.js","pages/keepsake/price/create.js","pages/keepsake/price/search.js","pages/keepsake/price/index.js","pages/keepsake/price/enter.js","pages/system/dict/form/otherForm.js","pages/system/dict/grade.js","pages/system/dict/identify.js","pages/system/dict/material.js","pages/system/dict/pack.js","pages/system/dict/priceFrom.js","pages/system/dict/priceType.js","pages/system/dict/form/projectForm.js","pages/system/dict/project.js","pages/system/dict/shape.js","pages/system/dict/weight.js","pages/system/manager/index.js","router.js","index.js"],"names":["set_bread_crumb","bread_crumb","type","set_nickname","nickname","set_current_menu","menu_key","appReducer","combineReducers","breadCrumb","state","action","switchMenu","collapse","collapsed","configStore","createStore","menuKey","KIND","PRICE","SYSTEM","DICT","PROJECT","MATERIAL","WEIGHT","SHAPE","PACK","IDENTIFY","GRADE","PRICETYPE","PRICEFROM","MANAGER","menuList","code","name","key","path","icon","operate","children","Item","SubMenu","NavLeft","openKeys","selectedKeys","menuNode","defaultOpenKeys","storageData","JSON","parse","sessionStorage","getItem","this","renderMenu","setState","pathname","props","location","indexOf","pathArr","push","data","map","item","getStorageData","title","to","mode","theme","React","Component","withRouter","connect","Header","NavHeader","visible","loading","dispatch","confirm","okText","cancelText","onOk","axios","method","url","then","res","removeItem","history","catch","err","form","validateFields","getFieldsValue","params","cancelModel","success","error","msg","resetFields","getFieldDecorator","style","background","padding","className","onClick","toggle","bind","overlay","logout","nickName","width","onCancel","footer","updatePwd","label","rules","required","whitespace","message","max","Password","placeholder","create","NavBread","i","Sider","Content","App","realName","trigger","collapsible","margin","minHeight","Welcome","Login","loginState","errorText","setItem","loginName","userId","stringify","components","e","keyCode","submitLogin","alt","src","initialValue","autoComplete","onKeyDown","enterLogin","prefix","color","size","block","FormItem","Option","SearchForm","checkSelect","layout","labelCol","span","wrapperCol","getPopupContainer","triggerNode","parentNode","value","dictionariesYear","it","index","dictionariesMaterial","id","dictionariesValue","dictionariesShape","RadioGroup","Group","CreateForm","handleBeforeUpload","file","isJpgOrPng","isLit","handleMove","fileList","newFileList","slice","splice","handleChange","info","list","forEach","length","num","handleUploadValidator","rule","callback","updateInfo","baseSelect","dictionariesProject","dictionariesWeight","formBigItemLayout","formPriceItemLayout","formMQItemLayout","parseInt","project_id","projectName","goods_name","allowClear","goods_type","goods_year","goods_material","String","goods_weight","pattern","RegExp","marginLeft","goods_weight_unit","goods_shape","goods_denomination","max_circulation","actual_casting_quantity","validator","listType","multiple","beforeUpload","onRemove","onChange","defaultFileList","display","Auth","authObj","authCode","Error","isAuth","imgKey","imgUrl","ksKind","isVisible","coinImgIsVisible","checkLoading","checkBtn","saveLoading","loadingTable","addBtnLoading","page","pageNo","pageSize","requestList","_this","componentCode","auth","query","checkData","status","busiGoodsList","dataSource","pagination","total","listCount","current","showTotal","showSizeChanger","onShowSizeChange","showQuickJumper","goButton","textDecoration","paddingLeft","handleCreate","requestSelect","formType","handleCheck","searchForm","setTimeout","handleReset","handleUpdate","record","img_url","imgArr","split","obj","Date","getTime","handleUptSubmit","createForm","values","formData","FormData","files","thumbUrl","includes","len","endNum","substring","append","Object","keys","update","handleSubmit","submit","handleClickImg","arr","coin","imgList","handleNoAddClick","next","slider","slick","slickNext","prev","slickPrev","handleClickGoodsName","goodsId","goodsName","pageNum","columns","dataIndex","render","text","wordBreak","project_id_value","cursor","imgs","goods_type_value","goods_material_value","goods_weight_value","goods_shape_value","goods_price_new","is_price_rise","fontSize","wrappedComponentRef","inst","locale","zhCN","bordered","scroll","x","destroyOnClose","ref","el","TextArea","moment","handleSelectChange","commonPacking","rate","dictionariesRatingAgencies","dictionariesPriceSource","dictionariesPriceType","dictionariesCertificationAuthority","dictionariesPacking","formSmallItemLayout","business_time","format","goods_packing","certification_authority","rating_agencies","rating_fraction","price_type","price_source","goods_price","quantity","remarks","formWtItemLayout","ksPrice","handleUpdateSubmit","businessTime","goods_id","create_time","ksEnter","match","handleEnterCreateForm","decodeURIComponent","hash","goods_packing_value","OtherForm","modalData","fromData","cnName","Grade","currentData","modelLoading","resData","newData","unshift","resetForm","otherForm","handleUpdateRow","row","findIndex","handleSave","saveModel","Identify","Material","Pack","PriceFrom","PriceType","ProjectForm","Idate","Adate","date","dateString","announcementDay","issuanceDay","abbreviationName","handleAd","handleId","Project","projectForm","issueYear","substr","Shape","Weight","Manager","formSpl","userStatus","handleStopDown","handleStopUp","handleResetPwd","isUpdate","updateId","rowData","stopState","resetPwdState","setFieldsValue","mobile","roleIds","join","coreUser","cancelForm","destroy","handleSaveRow","formItemLayout","marginTop","paddingTop","maxLength","textAlign","handUpdateUser","htmlType","handSaveUser","ERouter","component","KindList","PriceList","PriceEnter","store","configStroe","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d57bc6cb.chunk.js","sourcesContent":["\r\nconst SET_BREAD_NAME = 'SET_BREAD_CRUMB'\r\n\r\nexport default (state = {}, action) => {  \r\n    if(action.type == 'SET_BREAD_CRUMB'){\r\n        return {...state, bread_crumb: action.bread_crumb};\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\nexport const set_bread_crumb = (bread_crumb) => {\r\n    return { type: SET_BREAD_NAME, bread_crumb }\r\n}\r\n","\r\nconst SET_NICKNAME = 'SET_NICKNAME'\r\n\r\nexport default (state = {}, action) => {  \r\n    if(action.type == 'SET_NICKNAME'){\r\n        return {...state, nickname: action.nickname};\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\nexport const set_nickname = (nickname) => {\r\n    return { type: SET_NICKNAME, nickname }\r\n}","\r\nconst SET_CURRENT_MENU = 'SET_CURRENT_MENU'\r\n\r\nexport default (state = {}, action) => {  \r\n    if(action.type == 'SET_CURRENT_MENU'){\r\n        return {...state, menu_key: action.menu_key};\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\nexport const set_current_menu = (menu_key) => { \r\n    return { type: SET_CURRENT_MENU, menu_key }\r\n}\r\n","\r\nconst SET_COLLAPSE = 'SET_COLLAPSE'\r\n\r\nexport default (state = {}, action) => {   \r\n    if(action.type == 'SET_COLLAPSE'){\r\n        return {...state, collapse: action.collapsed};\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\nexport const set_collapse = (collapsed) => {\r\n    return { type: SET_COLLAPSE, collapsed }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\nimport breadCrumb from '../reducer/breadCrumb'; \r\nimport nickname from '../reducer/nickname'; \r\nimport switchMenu from '../reducer/switchMenu'\r\nimport collapse from '../reducer/collapse'\r\n\r\nconst appReducer = combineReducers({\r\n    breadCrumb,\r\n    nickname,\r\n    switchMenu,\r\n    collapse \r\n});\r\n\r\nconst configStore = () => createStore(appReducer);\r\n\r\nexport default configStore;","\r\nexport const menuKey = {\r\n    KIND: '001',\r\n    PRICE: '002',\r\n    SYSTEM: '003',\r\n    DICT: '003001',\r\n    PROJECT: '003001001',\r\n    MATERIAL: '003001002',\r\n    WEIGHT: '003001003',\r\n    SHAPE: '003001004',\r\n    PACK: '003001005',\r\n    IDENTIFY: '003001006',\r\n    GRADE: '003001007',\r\n    PRICETYPE: '003001008',\r\n    PRICEFROM: '003001009',\r\n    MANAGER:'003002',\r\n}\r\n \r\nconst menuList = [\r\n    {\r\n        code: menuKey.KIND,\r\n        name: '纪念币品种',\r\n        key: 'kind',\r\n        path: '/kind',\r\n        icon: 'appstore',\r\n        operate: {\r\n            '001': '查询',\r\n            '002': '新增',\r\n            '003': '新增-保存',\r\n            '004': '纠错',\r\n            '005': '纠错-保存'\r\n        }\r\n    },\r\n    {\r\n        code: menuKey.PRICE,\r\n        name: '纪念币价格',\r\n        key: 'price',\r\n        path: '/price',\r\n        icon: 'money-collect',\r\n        operate: {\r\n            '001': '查询',\r\n            '002': '纠错',\r\n            '003': '纠错-保存',\r\n            '004': '录入',\r\n            '005': '录入-查询',\r\n            '006': '录入-采集价格',\r\n            '007': '录入-采集价格-保存'\r\n        }\r\n    },\r\n    {\r\n        code: menuKey.SYSTEM,\r\n        name: '系统管理',\r\n        key: 'system', \r\n        icon: 'global',\r\n        children: [\r\n            {\r\n                code: menuKey.DICT,\r\n                name: '枚举管理',\r\n                key: 'dict',\r\n                icon: 'table',\r\n                children: [\r\n                    {\r\n                        code: menuKey.PROJECT,\r\n                        name: '纪念币项目',\r\n                        key: 'project',\r\n                        path: '/system/project',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.MATERIAL,\r\n                        name: '材质',\r\n                        key: 'material',\r\n                        path: '/system/material',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.WEIGHT,\r\n                        name: '重量单位',\r\n                        key: 'weight',\r\n                        path: '/system/weight',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.SHAPE,\r\n                        name: '形状',\r\n                        key: 'shape',\r\n                        path: '/system/shape',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.PACK,\r\n                        name: '包装版本',\r\n                        key: 'pack',\r\n                        path: '/system/pack',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.IDENTIFY,\r\n                        name: '封装认证机构',\r\n                        key: 'identify',\r\n                        path: '/system/identify',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.GRADE,\r\n                        name: '鉴定评级机构',\r\n                        key: 'grade',\r\n                        path: '/system/grade',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.PRICETYPE,\r\n                        name: '价格类型',\r\n                        key: 'priceType',\r\n                        path: '/system/priceType',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    },\r\n                    {\r\n                        code: menuKey.PRICEFROM,\r\n                        name: '价格来源',\r\n                        key: 'priceFrom',\r\n                        path: '/system/priceFrom',\r\n                        operate: {\r\n                            '001': '查询',\r\n                            '002': '新增',\r\n                            '003': '新增-保存',\r\n                            '004': '修改',\r\n                            '005': '修改-保存' \r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                code: menuKey.MANAGER,\r\n                name: '用户管理',\r\n                key: 'manager',\r\n                path: '/system/manager',\r\n                icon: 'table',\r\n                operate: {\r\n                    '001': '查询',\r\n                    '002': '新增',\r\n                    '003': '新增-保存',\r\n                    '004': '修改',\r\n                    '005': '修改-保存' ,\r\n                    '006': '启用' ,\r\n                    '007': '停用' ,\r\n                    '008': '密码重置' \r\n                }\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default menuList\r\n","import React from 'react'\r\nimport { Menu, Icon } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'   \r\nimport menuList from '../../config/menuList' \r\n\r\nconst Item = Menu.Item\r\nconst SubMenu = Menu.SubMenu\r\n\r\nclass NavLeft extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            openKeys: [],\r\n            selectedKeys: [],\r\n            menuNode: null,\r\n            defaultOpenKeys: [],\r\n            storageData: JSON.parse(sessionStorage.getItem('c_auth')) \r\n        }\r\n    } \r\n\r\n    componentWillMount() {    \r\n        let menuNode = this.renderMenu(menuList)\r\n        this.setState({\r\n            menuNode\r\n        })\r\n        let pathname = this.props.location.pathname\r\n        if(pathname.indexOf('system') != -1){\r\n            let pathArr = ['system'] \r\n            if(pathname.indexOf('manager') == -1){\r\n                pathArr.push('dict')\r\n            } \r\n            this.setState({\r\n                defaultOpenKeys: pathArr\r\n            })\r\n        }\r\n    }\r\n\r\n    getStorageData(key) {\r\n        let storageData = this.state.storageData\r\n        return storageData && storageData[key] ? true : false\r\n    } \r\n\r\n    renderMenu(data) {\r\n        return data.map((item) => {\r\n            if(!this.getStorageData(item.code)){return;}\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu  \r\n                    title={ \r\n                        <span>\r\n                            {\r\n                                item.icon ? <Icon type={item.icon}/> : ''\r\n                            } \r\n                            <span>\r\n                                {item.name}\r\n                            </span>\r\n                        </span>\r\n                    } \r\n                    key={item.key}>\r\n                        {this.renderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Item title={item.name} key={item.key}>\r\n                        <NavLink to={item.path}>\r\n                        <span>\r\n                        {\r\n                            item.icon ? <Icon type={item.icon}/> : ''\r\n                        }\r\n                            <span>\r\n                                {item.name}\r\n                            </span>\r\n                        </span>\r\n                        </NavLink>\r\n                    </Item>\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <Menu\r\n                mode=\"inline\"\r\n                theme=\"dark\"   \r\n                defaultOpenKeys={this.state.defaultOpenKeys}\r\n                selectedKeys={this.props.menu_key ? this.props.menu_key : []}  \r\n            > \r\n                {this.state.menuNode}\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {    \r\n    return {\r\n        menu_key: state.switchMenu.menu_key\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(NavLeft))\r\n ","import React from 'react'\r\nimport {Layout, Menu, Dropdown, Icon, Modal, Form, Input, Button, Message} from 'antd'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom'   \r\nimport { connect } from 'react-redux' \r\nimport {set_collapse} from '../../reducer/collapse' \r\n\r\nconst { Header } = Layout;\r\n\r\nclass NavHeader extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            collapsed: true,\r\n            visible: false,\r\n            loading: false\r\n        }\r\n    }\r\n \r\n    toggle() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n        this.props.dispatch(set_collapse(this.state.collapsed))\r\n    }\r\n\r\n    logout() { \r\n        Modal.confirm({\r\n            title: '退出登录?', \r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/user/logout' \r\n                })\r\n                .then((res) => {\r\n                    sessionStorage.removeItem('c_loginName')\r\n                    sessionStorage.removeItem('c_realName')\r\n                    sessionStorage.removeItem('c_userId') \r\n                    sessionStorage.removeItem('c_auth')\r\n                    this.props.history.push('/login') \r\n                })\r\n                .catch((err) => {\r\n        \r\n                });\r\n            }\r\n        });\r\n    } \r\n\r\n    updatePwd() {\r\n        this.props.form.validateFields(err => {\r\n            if (!err) {\r\n                let data = this.props.form.getFieldsValue()  \r\n                this.setState({\r\n                    loading: true\r\n                })\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/user/modifyPwd',\r\n                    params: data\r\n                })\r\n                .then((res) => { \r\n                    if(res.data.code == '00'){\r\n                        this.cancelModel()\r\n                        Message.success('修改成功，请重新登录', ()=>{\r\n                            sessionStorage.removeItem('c_loginName')\r\n                            sessionStorage.removeItem('c_realName')\r\n                            sessionStorage.removeItem('c_userId') \r\n                            sessionStorage.removeItem('c_auth')\r\n                            this.props.history.push('/login') \r\n                        })\r\n                    }else{\r\n                        Message.error(res.data.msg)\r\n                    }\r\n                    this.setState({ \r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    this.setState({ \r\n                        loading: false\r\n                    })\r\n                    Message.error('系统异常重试')\r\n                }); \r\n            }\r\n        })\r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false,\r\n            loading: false\r\n        })\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    render () {  \r\n        const { getFieldDecorator } = this.props.form\r\n        return ( \r\n            <Header style={{ background: '#fff', padding: 0 }}>\r\n                <div className=\"fl\">\r\n                    <Icon\r\n                        className=\"trigger\"\r\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        onClick={this.toggle.bind(this)}\r\n                    />\r\n                </div>\r\n                <div className=\"fr user_set\">\r\n                    <Dropdown overlay={() => \r\n                        <Menu>\r\n                            <Menu.Item key=\"1\">\r\n                                <span onClick={() => {\r\n                                    this.setState({\r\n                                        visible: true\r\n                                    })\r\n                                }} >\r\n                                    <Icon type=\"edit\" />  修改密码\r\n                                </span>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <span onClick={this.logout.bind(this)} >\r\n                                    <Icon type=\"logout\" />  退出登录\r\n                                </span>\r\n                            </Menu.Item> \r\n                        </Menu>\r\n                    }>\r\n                    <span className=\"user_icon\">\r\n                        <Icon type=\"user\" /> <span>欢迎，{this.props.nickName}</span> \r\n                    </span>\r\n                    </Dropdown>  \r\n                </div>\r\n                <Modal \r\n                    title='修改密码'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消'   \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.loading} onClick={this.updatePwd.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Form.Item label=''>\r\n                    {\r\n                        getFieldDecorator('oldPassword', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    message: '原始密码不能为空',\r\n                                },\r\n                                {\r\n                                    max: 30,\r\n                                    message: '原始密码最多输入30个字符',\r\n                                } \r\n                            ]\r\n                        })(\r\n                            <Input.Password placeholder=\"原始密码\" />\r\n                        )\r\n                    }                     \r\n                    </Form.Item>\r\n                    <Form.Item label=''>\r\n                    {\r\n                        getFieldDecorator('newPassword', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    message: '新密码不能为空',\r\n                                },\r\n                                {\r\n                                    max: 30,\r\n                                    message: '新密码最多输入30个字符',\r\n                                } \r\n                            ]\r\n                        })(\r\n                            <Input.Password placeholder=\"新密码\" />\r\n                        )\r\n                    }                     \r\n                    </Form.Item>\r\n                </Modal>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {  \r\n    return {\r\n        nickName: state.nickname.nickname\r\n    }\r\n}\r\n\r\nexport default Form.create()(withRouter(connect(mapStateToProps)(NavHeader)))","import React from 'react'\r\nimport { Breadcrumb } from 'antd';\r\nimport { connect } from 'react-redux'\r\n\r\nclass NavBread extends React.Component { \r\n\r\n    render() {  \r\n        return (\r\n            this.props.bread_crumb ? \r\n            (<Breadcrumb>\r\n                {this.props.bread_crumb.map((item, i) => { \r\n                    return <Breadcrumb.Item key={i}>{item}</Breadcrumb.Item>\r\n                })}\r\n            </Breadcrumb>)\r\n            : ''\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {   \r\n    return {\r\n        bread_crumb: state.breadCrumb.bread_crumb\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBread)","import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport NavLeft from './components/NavLeft' \r\nimport NavHeader from './components/NavHeader'\r\nimport NavBread from './components/NavBread' \r\nimport { set_nickname } from '../src/reducer/nickname'\r\n\r\nconst {Sider, Content } = Layout;\r\n\r\nclass App extends React.Component {\r\n\r\n    componentWillMount() {\r\n        let authData = sessionStorage.getItem('c_auth')   \r\n        if(!authData){\r\n            this.props.history.push('/login') \r\n        }\r\n        let realName = sessionStorage.getItem('c_realName')\r\n        this.props.dispatch(set_nickname(realName)); \r\n    }\r\n    \r\n    state = {\r\n        collapsed: false,\r\n    };  \r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <Layout className=\"wrap\">\r\n                <Sider trigger={null} collapsible collapsed={this.props.collapsed ? this.props.collapsed : false} width=\"246\">\r\n                    <div className=\"logo\" />\r\n                    <NavLeft></NavLeft>\r\n                </Sider>\r\n                <Layout>\r\n                    <NavHeader></NavHeader>\r\n                    <Content\r\n                        style={{\r\n                            margin: '10px 10px',\r\n                            padding: 12,\r\n                            background: '#fff',\r\n                            minHeight: 'auto',\r\n                        }}\r\n                        >\r\n                        <NavBread></NavBread>\r\n                        {this.props.children}\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => {   \r\n    return {\r\n        collapsed: state.collapse.collapse\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(App)) ","import React, { Component } from 'react' \r\nimport { connect } from 'react-redux'  \r\nimport { set_current_menu } from '../../reducer/switchMenu' \r\nimport { set_bread_crumb } from '../../reducer/breadCrumb'  \r\nimport './index.less'\r\n\r\nclass Welcome extends Component{\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(set_current_menu([])) \r\n        this.props.dispatch(set_bread_crumb([]));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='home-wrap'>\r\n                欢迎登录贵金属纪念币价格采集系统\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Welcome)","import React, { Component } from 'react' \r\nimport { Form, Input, Button, Icon, Checkbox, Message } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport { set_nickname } from '../../reducer/nickname' \r\nimport './index.less'; \r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false\r\n        } \r\n    } \r\n\r\n    submitLogin() { \r\n        this.props.form.validateFields(err => {\r\n            if (!err) {\r\n                let data = this.props.form.getFieldsValue()  \r\n                this.setState({\r\n                    loading: true\r\n                })\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/user/login',\r\n                    params: data\r\n                })\r\n                .then((res) => {\r\n                    let state = res.data.data.loginState \r\n                    let errorText = ''\r\n                    if(state == '00'){ \r\n                        sessionStorage.setItem('c_loginName', res.data.data.loginName)\r\n                        sessionStorage.setItem('c_realName', res.data.data.realName)\r\n                        sessionStorage.setItem('c_userId', res.data.data.userId) \r\n                        sessionStorage.setItem('c_auth', JSON.stringify(res.data.data.components))\r\n                        this.props.dispatch(set_nickname(res.data.data.realName)); \r\n                        Message.success('登录成功', 0.5, ()=>{\r\n                            this.props.history.push('/welcome')\r\n                        })\r\n                    }else{\r\n                        switch(state) {\r\n                            case '01':\r\n                                errorText = '密码错误'\r\n                                break\r\n                            case '02':\r\n                                errorText = '用户不存在'\r\n                                break\r\n                            case '03':\r\n                                errorText = '当前账户未激活'\r\n                                break\r\n                            default:\r\n                                errorText = res.data.msg\r\n                        } \r\n                        Message.error(errorText)\r\n                        this.setState({ \r\n                            loading: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    this.setState({ \r\n                        loading: false\r\n                    })\r\n                    Message.error('系统异常重试')\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    enterLogin(e) {\r\n        if(e.keyCode === 13){\r\n            this.submitLogin()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form\r\n        return ( \r\n            <div className=\"login-page\">\r\n                <div className=\"login-content-wrap\">\r\n                    <div className=\"login-content\"> \r\n                        <div className=\"login-logo\"> \r\n                            <img alt=\"贵金属纪念币价格采集系统\" src=\"/assets/logo.png\"/>\r\n                            贵金属纪念币价格采集系统\r\n                        </div>\r\n                        <div className=\"login-box\">\r\n                            <Form className=\"login-form\"> \r\n                                <Form.Item>\r\n                                {\r\n                                    getFieldDecorator('loginName', {\r\n                                        initialValue: '',\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: '用户名不能为空'\r\n                                            },\r\n                                            {\r\n                                                max: 30,\r\n                                                message: '用户名最多输入30个字符',\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Input autoComplete=\"off\" onKeyDown={this.enterLogin.bind(this)} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} size=\"large\" placeholder=\"用户名\"/>\r\n                                    )\r\n                                }\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                {\r\n                                    getFieldDecorator('password', {\r\n                                        initialValue: '',\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: '密码不能为空'\r\n                                            },\r\n                                            {\r\n                                                max: 30,\r\n                                                message: '密码最多输入30个字符',\r\n                                            } \r\n                                        ]\r\n                                    })(\r\n                                        <Input autoComplete=\"off\" onKeyDown={this.enterLogin.bind(this)} prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} size=\"large\" type=\"password\" placeholder=\"密码\"/>\r\n                                    )\r\n                                }\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Checkbox className=\"fl\">自动登录</Checkbox>\r\n                                    <NavLink className=\"fr\" to=\"/login\">忘记密码</NavLink>\r\n                                </Form.Item>\r\n                                <div>\r\n                                    <Button type=\"primary\" loading={this.state.loading} block={true} size=\"large\" onClick={this.submitLogin.bind(this)}>\r\n                                        登录\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Login))","import React from 'react' \r\nimport { Form, Input, Select } from 'antd'\r\nimport './../index.less'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nexport default class SearchForm extends React.Component {\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const checkSelect = this.props.checkSelect || {} \r\n        return (\r\n            <Form layout=\"inline\">                                 \r\n                <FormItem label='项目名称'>\r\n                {\r\n                    getFieldDecorator('projectName', {\r\n                        initialValue: ''\r\n                    })(\r\n                        <Input />\r\n                    )\r\n                }                     \r\n                </FormItem>\r\n                <FormItem label='纪念币名称'>\r\n                {\r\n                    getFieldDecorator('goodsName', {\r\n                        initialValue: ''\r\n                    })(\r\n                        <Input />\r\n                    )\r\n                }\r\n                </FormItem>\r\n                <FormItem label='币面年份' labelCol={{ span: 11}} wrapperCol={{span:13}}>\r\n                    {\r\n                        getFieldDecorator('goodsYear', {\r\n                            initialValue: ''\r\n                        })(\r\n                            <Select style={{width: 100}}  getPopupContainer={triggerNode => triggerNode.parentNode} >\r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    !checkSelect ? '' :\r\n                                    (checkSelect.dictionariesYear || []).map((it, index)=>{ \r\n                                        return (<Option key={index} value={it}>{it}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }                      \r\n                </FormItem>\r\n                <FormItem label='材质' labelCol={{ span: 8}} wrapperCol={{span:16}}>\r\n                    {\r\n                        getFieldDecorator('goodsMaterial', {\r\n                            initialValue: '',\r\n                        })(\r\n                            <Select  className='sel-style'  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    !checkSelect ? '' :\r\n                                    (checkSelect.dictionariesMaterial || [] ).map((it)=>{ \r\n                                        return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                \r\n                </FormItem>\r\n                <FormItem label='形状' labelCol={{ span: 8}} wrapperCol={{span:16}}>\r\n                    {\r\n                        getFieldDecorator('goodsShape', {\r\n                            initialValue: ''\r\n                        })(\r\n                            <Select className='sel-style'  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    !checkSelect ? '' :\r\n                                    (checkSelect.dictionariesShape || [] ).map((it)=>{ \r\n                                        return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nSearchForm = Form.create({})(SearchForm);\r\n","import React from 'react' \r\nimport { Form, Input, Select, Button, Radio, Col, Row, Upload, Icon, message } from 'antd'\r\nimport './../index.less'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\nconst RadioGroup = Radio.Group;\r\n\r\n\r\n\r\nexport default  class CreateForm extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fileList: props.fileList||[],\r\n        }\r\n        this.num = this.state.fileList.length\r\n    } \r\n\r\n\r\n    handleBeforeUpload = file => {  \r\n        const isJpgOrPng = file.type == 'image/jpeg' || file.type == 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('图片上传格式不对，请重新上传');\r\n            return isJpgOrPng\r\n        }    \r\n        const isLit = file.size /  1024 <= 200;\r\n        if (!isLit) {\r\n            this.error = true\r\n            message.error('上传图片大小不超过200k');\r\n            return isLit\r\n        } \r\n        return false\r\n    }\r\n\r\n    handleMove = file => {\r\n        this.setState(({fileList})=>{\r\n            const index=fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index,1);\r\n            return {\r\n                fileList:newFileList\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = info => {\r\n        let list = info.fileList\r\n        list.forEach((file, index) => {\r\n            const bool = file.name ? true : false\r\n            if(bool){\r\n                const isJpgOrPng = file.type == 'image/jpeg' || file.type == 'image/png';\r\n                if(!isJpgOrPng){\r\n                    list.splice(index, 1)\r\n                }\r\n                const isLit = file.size /  1024 <= 200\r\n                if(!isLit){\r\n                    list.splice(index, 1)\r\n                }\r\n            }        \r\n        }); \r\n        if(list.length > 2){\r\n            message.error('最多上传2张图片')\r\n            return false\r\n        }\r\n        this.num = list.length \r\n        this.setState(({fileList})=>{\r\n            return {\r\n                fileList:list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleUploadValidator = (rule, value, callback) => {\r\n        if(this.num <= 0){\r\n            callback('请上传图片')\r\n        }else {\r\n            callback()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const updateInfo = this.props.updateInfo || '';\r\n        const { dictionariesShape, dictionariesProject, dictionariesYear, dictionariesMaterial, dictionariesWeight} = this.props.baseSelect;\r\n\r\n        const formBigItemLayout = {\r\n            labelCol:{\r\n               span: 4\r\n            },\r\n            wrapperCol:{\r\n                span:18\r\n            }\r\n        }\r\n        const formPriceItemLayout = {\r\n            labelCol:{\r\n               span: 8\r\n            },\r\n            wrapperCol:{\r\n                span:12\r\n            }\r\n        }\r\n        const formMQItemLayout = {\r\n            labelCol:{\r\n               span: 8\r\n            },\r\n            wrapperCol:{\r\n                span:12\r\n            }\r\n        }\r\n        const { fileList } = this.state;\r\n        return (\r\n            <div>\r\n                <Form>                               \r\n                    <FormItem label='项目名称' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('projectName', {\r\n                            initialValue:  !updateInfo ? '' : parseInt(updateInfo.project_id),\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择项目名称'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode}> \r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    (dictionariesProject || []).map((it, index)=>{ \r\n                                        return (<Option key={it.id} value={it.id}>{it.projectName}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }                                       \r\n                    </FormItem>\r\n                    <FormItem label='品种名称' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('goodsName', {\r\n                            initialValue: !updateInfo ? '' : updateInfo.goods_name,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写品种名称'\r\n                                },\r\n                                {\r\n                                    max: 200,\r\n                                    message: '最多输入200个字符'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input autoComplete=\"off\" allowClear />\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <FormItem label='类型' labelCol={{ span: 8}} wrapperCol={{span:16}}>                        \r\n                                {\r\n                                    getFieldDecorator('goodsType', {\r\n                                        initialValue: !updateInfo ? '' : updateInfo.goods_type,\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请选择类型'\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                    <RadioGroup>\r\n                                        <Radio value=\"0\">单枚</Radio>\r\n                                        <Radio value=\"1\">套装</Radio>\r\n                                    </RadioGroup>\r\n                                    )\r\n                                }                      \r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                                <FormItem label='币面年份' {...formPriceItemLayout}> \r\n                            {\r\n                                getFieldDecorator('goodsYear', {\r\n                                    initialValue: !updateInfo ? '' : updateInfo.goods_year,\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择币面年份'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                        <Option value=''>请选择</Option>\r\n                                        {\r\n                                            (dictionariesYear || [] ).map((it, index)=>{ \r\n                                                return (<Option key={index} value={it}>{it}</Option>)\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )\r\n                            }                \r\n                            </FormItem>                      \r\n                        </Col>\r\n                    </Row>                    \r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <FormItem label='材质'  {...formMQItemLayout}>\r\n                                {\r\n                                    getFieldDecorator('goodsMaterial', {\r\n                                        initialValue: !updateInfo ? '' : parseInt(updateInfo.goods_material),\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请选择材质'\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                            <Option value=''>请选择</Option>\r\n                                            {\r\n                                                (dictionariesMaterial || []).map((it, index)=>{ \r\n                                                    return (<Option key={index} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        </Col> \r\n                        <Col span={12}>\r\n                            <Row>\r\n                                <Col span={16}>\r\n                                    <FormItem label='重量' labelCol={{span: 12}} wrapperCol={{span:8}} >\r\n                                        {\r\n                                            getFieldDecorator('goodsWeight', {\r\n                                                initialValue: !updateInfo ? '' : String(updateInfo.goods_weight),\r\n                                                rules: [\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: '请填写重量'\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(\"^[1-9]{1}[0-9]*$|^0{1}\\.{1}[0-9]+$|^[1-9]{1}[0-9]*\\.{1}[0-9]+$\"),\r\n                                                        message: '请输入大于0的数字'\r\n                                                    },\r\n                                                    {\r\n                                                        max: 20,\r\n                                                        message: '最多输入20个字符'\r\n                                                    }\r\n                                                ]\r\n                                                \r\n                                            })(\r\n                                                <Input autoComplete=\"off\" /> \r\n                                            )\r\n                                        }\r\n                                    </FormItem> \r\n                                </Col>\r\n                                <Col span={4}>\r\n                                    <FormItem style={{marginLeft: -35}} >\r\n                                        {\r\n                                            getFieldDecorator('goodsWeightUnit', {\r\n                                                initialValue: !updateInfo ? '' : parseInt(updateInfo.goods_weight_unit),\r\n                                                rules: [\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: '请选择重量单位'\r\n                                                    }\r\n                                                ]\r\n                                            })(\r\n                                                <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                                    <Option value=''>请选择</Option>\r\n                                                    {\r\n                                                        (dictionariesWeight || [] ).map((it, index)=>{ \r\n                                                            return (<Option key={index} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            )\r\n                                        }\r\n                                    </FormItem> \r\n                                </Col>                               \r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <FormItem label='形状' {...formMQItemLayout}> \r\n                            {\r\n                                getFieldDecorator('goodsShape', {\r\n                                    initialValue: !updateInfo ? '' : parseInt(updateInfo.goods_shape),\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择形状'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                        <Option value=''>请选择</Option>\r\n                                        {\r\n                                            (dictionariesShape || []).map((it, index)=>{ \r\n                                                return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                            })\r\n                                        }                                     \r\n                                    </Select>\r\n                                )\r\n                            }\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                        <FormItem label='面额' {...formPriceItemLayout}>\r\n                        {\r\n                            getFieldDecorator('goodsDenomination', {\r\n                                initialValue: !updateInfo ? '' : updateInfo.goods_denomination,\r\n                                rules: [\r\n                                    {\r\n                                        pattern: new RegExp(/^[1-9]\\d*$/, \"g\"),\r\n                                        message: '请输入正确的面额'\r\n                                    },\r\n                                    {\r\n                                        max: 20,\r\n                                        message: '最多输入20个字符'\r\n                                    }\r\n                                ]   \r\n\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                        <FormItem label='最大发行量' {...formMQItemLayout}>\r\n                        {\r\n                            getFieldDecorator('maxCirculation', {\r\n                                initialValue: !updateInfo ? '' : String(updateInfo.max_circulation),\r\n                                rules: [\r\n                                    {\r\n                                        required: true, \r\n                                        message: '请填写最大发行量'\r\n                                    },\r\n                                    {\r\n                                        pattern: new RegExp(/^[1-9]\\d*$/, \"g\"),\r\n                                        message: '请输入正确的最大发行量'\r\n                                    },\r\n                                    {\r\n                                        max: 15,\r\n                                        message: '最多输入15个字符'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                        <FormItem label='实铸量' {...formPriceItemLayout}> \r\n                        {\r\n                            getFieldDecorator('actualCastingQuantity', {\r\n                                initialValue: !updateInfo ? '' : (!updateInfo.actual_casting_quantity ? '' : String(updateInfo.actual_casting_quantity)),\r\n                                rules: [\r\n                                    {\r\n                                        pattern: new RegExp(/^[1-9]\\d*$/, \"g\"),\r\n                                        message: '请输入正确的实铸量'\r\n                                    },\r\n                                    {\r\n                                        max: 15,\r\n                                        message: '最多输入15个字符'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <FormItem label='币面图片' {...formBigItemLayout}>\r\n                            {\r\n                                getFieldDecorator('files', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            validator: this.handleUploadValidator\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Upload\r\n                                        listType=\"picture\"\r\n                                        multiple={true} \r\n                                        beforeUpload={this.handleBeforeUpload} // 上传之前，对图片的格式做校验，并获取图片的宽高\r\n                                        onRemove={this.handleMove}\r\n                                        onChange={this.handleChange}\r\n                                        defaultFileList = {[...fileList]}\r\n                                        fileList={fileList}\r\n                                    >\r\n                                        {\r\n                                            this.num >= 2 ? null :\r\n                                            <div>\r\n                                                <Button><Icon type=\"upload\" /> 上传图片</Button>\r\n                                                <div style={{display: 'initial',marginLeft: 15}}>.jpg、.png文件，大小不超过200K，最多上传两张</div>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                        \r\n                                        \r\n                                    </Upload>\r\n                                )\r\n                            }\r\n                            </FormItem>                        \r\n                        </Col>\r\n                    </Row>\r\n                     \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nCreateForm = Form.create({})(CreateForm);\r\n","import { menuKey } from '../config/menuList' \r\n\r\nconst Auth = (key, code) => {\r\n    const authObj = JSON.parse(sessionStorage.getItem('c_auth'))\r\n    let authCode = ''\r\n    switch(key) {\r\n        case menuKey.KIND:\r\n            authCode = `${menuKey.KIND}${code}`\r\n        break\r\n        case menuKey.PRICE:\r\n            authCode = `${menuKey.PRICE}${code}`\r\n        break\r\n        case menuKey.SYSTEM:\r\n            authCode = `${menuKey.SYSTEM}${code}`\r\n        break\r\n        case menuKey.DICT:\r\n            authCode = `${menuKey.DICT}${code}`\r\n        break\r\n        case menuKey.PROJECT:\r\n            authCode = `${menuKey.PROJECT}${code}`\r\n        break\r\n        case menuKey.MATERIAL:\r\n            authCode = `${menuKey.MATERIAL}${code}`\r\n        break\r\n        case menuKey.WEIGHT:\r\n            authCode = `${menuKey.WEIGHT}${code}`\r\n        break\r\n        case menuKey.SHAPE:\r\n            authCode = `${menuKey.SHAPE}${code}`\r\n        break\r\n        case menuKey.PACK:\r\n            authCode = `${menuKey.PACK}${code}`\r\n        break\r\n        case menuKey.IDENTIFY:\r\n            authCode = `${menuKey.IDENTIFY}${code}`\r\n        break\r\n        case menuKey.GRADE:\r\n            authCode = `${menuKey.GRADE}${code}`\r\n        break\r\n        case menuKey.PRICETYPE:\r\n            authCode = `${menuKey.PRICETYPE}${code}`\r\n        break\r\n        case menuKey.PRICEFROM:\r\n            authCode = `${menuKey.PRICEFROM}${code}`\r\n        break\r\n        case menuKey.MANAGER:\r\n            authCode = `${menuKey.MANAGER}${code}`\r\n        break \r\n        default:\r\n            throw Error('请输入type/code')\r\n    }\r\n    return {\r\n        isAuth: authObj && authObj[authCode] ? true : false,\r\n        authCode\r\n    }\r\n}\r\n\r\nexport default Auth","export const imgKey = {\r\n   imgUrl: 'http://imgprice.ecgci.com'\r\n}","import React, { Component } from 'react' \r\nimport { Button, Table, Modal,message,Carousel,ConfigProvider,Icon } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport './../index.less'\r\nimport SearchForm from './search'\r\nimport CreateForm from './create' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList'\r\nimport { imgKey } from '../../../imgUrl'\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nclass ksKind extends Component{\r\n\r\n    state = {\r\n        isVisible: false,\r\n        baseSelect: '',\r\n        checkSelect: {},\r\n        fileList: [],\r\n        coinImgIsVisible: false,\r\n        checkLoading: false,\r\n        checkBtn: false,\r\n        saveLoading: false,\r\n        loadingTable: false,\r\n        addBtnLoading: false,\r\n        imgUrl: ''\r\n    }\r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','贵金属纪念币']));\r\n        this.props.dispatch(set_current_menu(['kind']))\r\n    } \r\n\r\n    componentDidMount () {\r\n        let checkData = this.searchForm.props.form.getFieldsValue();\r\n        this.setState({\r\n            checkData\r\n        })\r\n        const pageNum = sessionStorage.getItem('currentPageNo')\r\n        if(pageNum){\r\n            this.page.pageNo = parseInt(pageNum)\r\n            sessionStorage.removeItem('currentPageNo')\r\n        }\r\n        setTimeout(()=>{\r\n            this.requestList()\r\n        },10)\r\n    }\r\n\r\n    page = {\r\n        pageNo: 1,\r\n        pageSize: 10\r\n    }\r\n\r\n\r\n    requestList=()=>{\r\n        let _this = this;\r\n        //权限\r\n        let componentCode = {\r\n            componentCode: auth(menuKey.KIND, '001').authCode\r\n        } \r\n        let query = {..._this.state.checkData, ..._this.page, ...componentCode}\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods/list',  \r\n            params: query\r\n        })\r\n        .then((res)=>{\r\n            if(res.status == '200'){\r\n                let code = res.data.code;\r\n                this.setState({\r\n                    loadingTable: false\r\n                })\r\n                if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else if(code == '00'){ \r\n                    if(this.state.checkBtn){\r\n                        this.setState({\r\n                            checkBtn: false\r\n                        })\r\n                        message.success('查询成功');  \r\n                    }                             \r\n                    (res.data.data.busiGoodsList || [] ).map((item, index)=>{\r\n                        item.key = index\r\n                    })\r\n                    this.setState({                    \r\n                        dataSource:res.data.data.busiGoodsList, \r\n                        checkSelect: res.data.data,\r\n                        checkLoading: false,\r\n                        pagination: {\r\n                            total: res.data.data.listCount,  \r\n                            current: this.page.pageNo,                        \r\n                            showTotal:()=>{\r\n                                return `共${res.data.data.listCount}条`\r\n                            },\r\n                            onChange: (pageNo,pageSize )=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showSizeChanger : true,\r\n                            onShowSizeChange: (pageNo,pageSize)=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showQuickJumper: {goButton:<a style={{textDecoration:\"underline\",paddingLeft:10}}>跳转</a>}\r\n                        }\r\n                    })\r\n                } \r\n            }\r\n        })\r\n        .catch(() => {\r\n            this.setState({ \r\n                checkLoading: false\r\n            })\r\n            message.error('系统异常重试')\r\n        });\r\n    }\r\n\r\n    //添加操作\r\n    handleCreate = ()=>{ \r\n        this.setState({\r\n            addBtnLoading: true,\r\n        })\r\n        if(!this.state.baseSelect){\r\n            this.requestSelect()  \r\n        }else {\r\n            this.setState({\r\n                isVisible: true\r\n            })\r\n        }   \r\n        this.setState({\r\n            title:'添加纪念币',\r\n            updateInfo: '',\r\n            formType: 'create',\r\n            addBtnLoading: false\r\n        })\r\n    }\r\n\r\n    requestSelect=()=>{\r\n        let type = this.state.formType\r\n        let componentCode = ''\r\n        type == 'update' ? componentCode = auth(menuKey.KIND, '004').authCode : componentCode = auth(menuKey.KIND, '002').authCode\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods/add',\r\n            params: {\r\n                componentCode: componentCode\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if(res.status =='200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    this.setState({  \r\n                        isVisible: true,                    \r\n                        baseSelect: res.data.data,                      \r\n                    })  \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }\r\n            }          \r\n        })\r\n        .catch(() => {\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    //查询\r\n    handleCheck = () => {\r\n        let checkData = this.searchForm.props.form.getFieldsValue()       \r\n        this.setState({\r\n            checkData: checkData,\r\n            checkLoading: true,\r\n            checkBtn: true\r\n        })\r\n        this.page.pageNo = 1\r\n        setTimeout(()=>{\r\n            this.requestList()\r\n        },100)\r\n    }  \r\n\r\n    //重置\r\n    handleReset =()=>{\r\n        this.searchForm.props.form.resetFields();\r\n    }\r\n\r\n     // 校改操作\r\n    handleUpdate = (record)=>{\r\n        if(record.img_url){               \r\n            let imgArr = []\r\n            let arr = (record.img_url).split(',') \r\n            arr.forEach((item,index) => {\r\n                let obj = {}\r\n                obj['uid'] = index\r\n                obj['thumbUrl'] = (imgKey.imgUrl+item)+'?'+new Date().getTime()\r\n                imgArr.push(obj)\r\n            }); \r\n            this.setState({\r\n                fileList: imgArr\r\n            })\r\n        }\r\n        this.setState({\r\n            addBtnLoading: true\r\n        })\r\n        if(!this.state.baseSelect){\r\n            this.requestSelect()  \r\n        }else (\r\n            this.setState({\r\n                isVisible: true, \r\n            })\r\n        ) \r\n        this.setState({        \r\n            title: '纪念币校改',\r\n            updateInfo: record,\r\n            id: record.id,\r\n            formType: 'update',\r\n            addBtnLoading: false\r\n        })\r\n    }\r\n\r\n    //校改保存数据\r\n    handleUptSubmit = () =>{   \r\n        this.createForm.props.form.validateFields((err, values)=>{       \r\n            if(!err){       \r\n                let data = this.createForm.props.form.getFieldsValue()\r\n                this.setState({\r\n                    saveLoading: true\r\n                })\r\n                data.id = this.state.id\r\n                const formData = new FormData();\r\n                let files = []\r\n                if(data.files){\r\n                    files = data.files.fileList;\r\n                }else {\r\n                    files = this.state.fileList\r\n                }       \r\n                files.forEach(file => {\r\n                    let url = file.thumbUrl            \r\n                    if(url.includes(imgKey.imgUrl)){\r\n                        let len = imgKey.imgUrl.length\r\n                        url = url.substring(len)\r\n                        let endNum = url.indexOf('?')\r\n                        url = url.substring(0, endNum)\r\n                    }\r\n                    formData.append('fileList', url);\r\n                });         \r\n                Object.keys(data).map((item)=>{\r\n                    if(!data[item]){   \r\n                        formData.append(item,\"\");\r\n                    }else{\r\n                        formData.append(item,data[item]);\r\n                    }\r\n                    \r\n                })\r\n                let componentCode = auth(menuKey.KIND, '005').authCode\r\n                formData.append('componentCode', componentCode)\r\n                this.update(formData);  \r\n            }\r\n        })\r\n    }\r\n\r\n    //校改保存\r\n    update =(data)=>{\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods/saveUpdate',\r\n            data: data,\r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    message.success('纪念币数据修改成功');\r\n                    this.setState({\r\n                        isVisible: false,                 \r\n                        updateInfo: '',\r\n                        fileList: []\r\n                    })\r\n                    this.createForm.props.form.resetFields()\r\n                    this.requestList()                 \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else {\r\n                    message.error(res.data.msg);\r\n                }\r\n                this.setState({\r\n                    saveLoading: false,\r\n                })\r\n            }           \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                saveLoading: false,\r\n            })\r\n            message.error('系统异常重试')\r\n        });\r\n    }\r\n\r\n    //保存数据\r\n    handleSubmit = ()=> {\r\n        //获取到创建的所有值\r\n        this.createForm.props.form.validateFields((err, values)=>{\r\n            if(!err){\r\n                this.setState({\r\n                    saveLoading: true\r\n                }) \r\n                let data = this.createForm.props.form.getFieldsValue()\r\n                const formData = new FormData();  \r\n                let files = []\r\n                if(data.files){\r\n                    files = data.files.fileList;\r\n                }else {\r\n                    files = this.state.fileList\r\n                }\r\n                files.forEach(file => {\r\n                    formData.append('fileList', file.thumbUrl);\r\n                });         \r\n                Object.keys(data).map((item)=>{\r\n                    if(!data[item]){   \r\n                        formData.append(item,\"\");\r\n                    }else{\r\n                        formData.append(item,data[item]);\r\n                    }\r\n                    \r\n                })\r\n                let componentCode = auth(menuKey.KIND, '003').authCode\r\n                formData.append('componentCode', componentCode)\r\n                this.submit(formData);\r\n            }\r\n        })  \r\n    }\r\n\r\n    //保存\r\n    submit =(data)=>{\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods/save',\r\n            data: data       \r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    message.success('纪念币数据添加成功');\r\n                    this.setState({\r\n                        isVisible: false,                      \r\n                        updateInfo: '',\r\n                        fileList: []\r\n                    })\r\n                    this.createForm.props.form.resetFields()\r\n                    this.requestList()                 \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else {\r\n                    message.error(res.data.msg);\r\n                }\r\n                this.setState({\r\n                    saveLoading: false,\r\n                })\r\n            }           \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                saveLoading: false,\r\n            })\r\n            message.error('系统异常重试')\r\n        });\r\n    }\r\n\r\n    //点击图片\r\n    handleClickImg=(arr)=>{ \r\n        let coin = true\r\n        if(arr.length <= 1){\r\n            coin = false\r\n        }\r\n        let imgList = []\r\n        arr.forEach((item) => {\r\n            imgList.push((imgKey.imgUrl+item)+'?'+new Date().getTime())\r\n        }); \r\n        this.setState({\r\n            coinImgIsVisible: true,\r\n            imgArr: imgList,\r\n            coin\r\n        })\r\n    }\r\n\r\n    //暂不添加\r\n    handleNoAddClick = () =>{\r\n        this.setState({\r\n            isVisible: false,\r\n            fileList: []\r\n        })\r\n        this.createForm.props.form.resetFields()\r\n    }\r\n\r\n    next = () => {\r\n        this.slider.slick.slickNext()\r\n    }\r\n\r\n    prev = () => {\r\n        this.slider.slick.slickPrev(    )\r\n    }\r\n\r\n    handleClickGoodsName = (record) => {   \r\n        sessionStorage.setItem('currentPageNo', this.page.pageNo)\r\n        const goodsId = record.id\r\n        const goodsName = record.goods_name\r\n        this.props.history.push('/priceenter/'+goodsId + '/'+ goodsName)\r\n    }\r\n\r\n  \r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:'纪念币编码',\r\n                dataIndex:'id',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{ record.id }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '所属纪念币项目',\r\n                dataIndex: 'project_id_value',\r\n                width: 100,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 70,wordBreak:\"break-all\"}}>{ record.project_id_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '纪念币名称',\r\n                dataIndex: 'goods_name',\r\n                width: 110,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 70,wordBreak:\"break-all\",cursor: \"pointer\",}} onClick={()=>this.handleClickGoodsName(record)}>{ record.goods_name }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '币图',\r\n                dataIndex: 'img_url',\r\n                width: 70,\r\n                className: 'coinImg',\r\n                render: (text, record)=>{\r\n                    let imgs = record.img_url\r\n                    let imgUrl = null\r\n                    let arr = null\r\n                    if(imgs){\r\n                        arr = imgs.split(',')\r\n                        imgUrl = arr[0]\r\n                    }\r\n                    return !imgs ? '' : <img onClick={()=>this.handleClickImg(arr)} style={{width: 50, cursor: 'pointer'}} src={(imgKey.imgUrl+imgUrl)+'?'+new Date().getTime()} />\r\n                }\r\n            },\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'goods_type_value',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{ record.goods_type_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '材质',\r\n                dataIndex: 'goods_material_value',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{ record.goods_material_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '币面年份',\r\n                dataIndex: 'goods_year',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{ record.goods_year }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '重量',\r\n                dataIndex: 'goods_weight_value',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 25,wordBreak:\"break-all\"}}>{ record.goods_weight_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '形状',\r\n                dataIndex: 'goods_shape_value',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 25,wordBreak:\"break-all\"}}>{ record.goods_shape_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '公告最大发行量',\r\n                dataIndex: 'max_circulation',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 50,wordBreak:\"break-all\"}}>{ record.max_circulation }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '实铸量',\r\n                dataIndex: 'actual_casting_quantity',\r\n                width: 70,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{ record.actual_casting_quantity }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '最新采集价格',\r\n                dataIndex: 'goods_price_new',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 40,wordBreak:\"break-all\"}}>{record.goods_price_new}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '价格走势',\r\n                dataIndex: 'priceTrend',\r\n                width: 70,\r\n                render: (text,  record)=>{\r\n                    if(record.is_price_rise == '0'){\r\n                        return <NavLink\r\n                                    to={`/priceenter/${record.id}/${record.goods_name}`}\r\n                                >\r\n                                    <Icon style={{fontSize: 20, width: 40, color: 'red'}} type=\"fall\" />\r\n                                </NavLink>\r\n                    }else if(record.is_price_rise == '1'){\r\n                        return <NavLink\r\n                                    to={`/priceenter/${record.id}/${record.goods_name}`}\r\n                                >\r\n                                    <Icon style={{fontSize: 20, width: 40, color: 'blue'}} type=\"rise\" />\r\n                                </NavLink>\r\n                    }else {\r\n                        return ''\r\n                    }\r\n                    \r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (text,record)=>{\r\n                    return auth(menuKey.KIND, '004').isAuth ? <a loading={this.setState.addBtnLoading} onClick={() => { this.handleUpdate(record) }}>校改</a> : ''\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (           \r\n            <div> \r\n                <div>\r\n                    <SearchForm checkSelect={this.state.checkSelect}  wrappedComponentRef={(inst) => {this.searchForm = inst }} />\r\n                </div>\r\n                <div className='btn'>\r\n                    {\r\n                        auth(menuKey.KIND, '002').isAuth ? <Button type=\"primary\" loading={this.state.addBtnLoading} onClick={this.handleCreate}>添加纪念币</Button> : ''\r\n                    }\r\n                    {\r\n                        auth(menuKey.KIND, '001').isAuth ? <Button type=\"primary\" loading={this.state.checkLoading} onClick={this.handleCheck}>查询</Button> : ''\r\n                    }\r\n                    <Button onClick={this.handleReset}>重置</Button> \r\n                </div>\r\n                <div className='tb-style'>\r\n                    <ConfigProvider  locale={zhCN}>\r\n                        <Table                   \r\n                            bordered \r\n                            scroll={{x: '100%'}}   \r\n                            columns={columns}\r\n                            dataSource={this.state.dataSource}\r\n                            pagination={this.state.pagination}\r\n                            loading={this.state.loadingTable}\r\n                        />\r\n                    </ConfigProvider>\r\n               \r\n                </div>\r\n                <Modal\r\n                    title={this.state.title}\r\n                    width={700}\r\n                    visible={this.state.isVisible}  \r\n                    destroyOnClose={true}   \r\n                    className='kind-upload'                     \r\n                    onCancel={()=>{                        \r\n                        this.setState({\r\n                            isVisible: false,\r\n                            fileList: []\r\n                        })\r\n                        this.createForm.props.form.resetFields()\r\n                    }}                   \r\n                    footer={\r\n                        this.state.formType == 'update' ? \r\n                            ([                                                                                      \r\n                                auth(menuKey.KIND, '005').isAuth ? <Button key=\"submit\" type=\"primary\" loading={this.state.saveLoading}  onClick={this.handleUptSubmit}>确定校改</Button> : '',\r\n                            ]) : \r\n                            ([                                                            \r\n                                <Button key=\"back\" onClick={this.handleNoAddClick}>暂不添加</Button>,\r\n                                auth(menuKey.KIND, '003').isAuth ? <Button key=\"submit\" type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSubmit}>保存纪念币</Button> : '',\r\n                            ])\r\n                    }\r\n                >\r\n                    <CreateForm fileList={this.state.fileList}  baseSelect={this.state.baseSelect} updateInfo={this.state.updateInfo} wrappedComponentRef={(inst) => {this.createForm = inst }} />\r\n                </Modal>    \r\n                <Modal\r\n                    title='币图浏览'\r\n                    width={300}\r\n                    visible={this.state.coinImgIsVisible}\r\n                    destroyOnClose={true}\r\n                    footer={null}  \r\n                    onCancel={()=>{                        \r\n                        this.setState({\r\n                            coinImgIsVisible: false,\r\n                        })\r\n                    }}                \r\n                >\r\n                    <div className=\"home-lunbo\">\r\n                        <Carousel \r\n                            ref={el => (this.slider = el)}                   \r\n                        >                      \r\n                            {                           \r\n                                (this.state.imgArr || []).map((item,index)=>{\r\n                                    return (\r\n                                            <div key={index}>\r\n                                                <img style={{width: '66%'}} src={item}/>\r\n                                            </div>\r\n                                        )\r\n                                })\r\n                            }                                                      \r\n                        </Carousel>\r\n                        {\r\n                            this.state.coin ? \r\n                            <div>\r\n                                <Icon type=\"left-circle\"onClick={this.prev}/>\r\n                                <Icon className='right' type=\"right-circle\" onClick={this.next}/>\r\n                            </div> : ''\r\n                        }\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(ksKind)","import React from 'react' \r\nimport { Form, Input, Select, Col, Row, DatePicker  } from 'antd'\r\nimport moment from 'moment';\r\nimport './../index.less'\r\nimport 'moment/locale/zh-cn'\r\nimport locale from 'antd/es/date-picker/locale/zh_CN'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\nconst TextArea = Input.TextArea;\r\n\r\nmoment.locale('zh-cn');\r\n\r\nexport default  class CreateForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.baseSelect = props.baseSelect\r\n        this.commonPacking = false\r\n        this.rate = false\r\n    }\r\n\r\n    handleSelectChange = (value, text)  => {\r\n        this.commonPacking = false\r\n        this.rate = false\r\n        if(text.props.children == '封装认证'){\r\n            this.commonPacking = true\r\n        }\r\n        if(text.props.children == '鉴定评级'){\r\n            this.rate = true\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form; \r\n        const { dictionariesRatingAgencies,dictionariesPriceSource,dictionariesPriceType,dictionariesCertificationAuthority,dictionariesPacking } = this.baseSelect; \r\n        const updateInfo = this.props.updateInfo || '';\r\n        const formBigItemLayout = {\r\n            labelCol:{\r\n               span: 4\r\n            },\r\n            wrapperCol:{\r\n                span: 7\r\n            }\r\n        }    \r\n        const formSmallItemLayout = {\r\n            labelCol:{\r\n               span: 8\r\n            },\r\n            wrapperCol:{\r\n                span: 14\r\n            }\r\n        }    \r\n        const formTextItemLayout = {\r\n            labelCol:{\r\n               span: 4\r\n            },\r\n            wrapperCol:{\r\n                span: 20\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Form>                               \r\n                    <FormItem label='成交时间' {...formBigItemLayout}> \r\n                    {\r\n                        getFieldDecorator('businessTime', {\r\n                            initialValue: !updateInfo ? null : moment(updateInfo.business_time ),\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择成交时间'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <DatePicker  \r\n                                locale={locale}\r\n                                format=\"YYYY-MM-DD\"  \r\n                            />                         \r\n                        )                    \r\n                    }  \r\n                    </FormItem>\r\n\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <FormItem label='包装版本' {...formSmallItemLayout}>\r\n                            {\r\n                                getFieldDecorator('packing', {\r\n                                    initialValue: updateInfo ? (updateInfo.goods_packing ? parseInt(updateInfo.goods_packing) : '') : '',\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择包装版本'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select getPopupContainer={triggerNode => triggerNode.parentNode}  onChange={this.handleSelectChange}>\r\n                                        <Option value=''>请选择</Option>\r\n                                        {\r\n                                            (dictionariesPacking || []).map((it)=>{ \r\n                                                return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                            })\r\n                                        }                                     \r\n                                    </Select>\r\n                                )\r\n                            }\r\n                            </FormItem>                       \r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <FormItem label='封装认证机构' {...formSmallItemLayout}>\r\n                            {\r\n                                getFieldDecorator('certificationAuthority', {\r\n                                    initialValue : updateInfo ? (updateInfo.certification_authority ? parseInt(updateInfo.certification_authority) : '') : '',\r\n                                    rules: [\r\n                                        {\r\n                                            required: this.commonPacking,\r\n                                            message: '请选择封装认证机构'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                        <Option value=''>请选择</Option>\r\n                                        {\r\n                                            (dictionariesCertificationAuthority || []).map((it)=>{ \r\n                                                return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                            </FormItem>                       \r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <FormItem label='鉴定评级机构' {...formSmallItemLayout}>\r\n                            {\r\n                                getFieldDecorator('ratingAgencies', {\r\n                                    initialValue : updateInfo ? (updateInfo.rating_agencies ? parseInt(updateInfo.rating_agencies) : '') : '',                   \r\n                                    rules: [\r\n                                        {\r\n                                            required: this.rate,\r\n                                            message: '请选择鉴定评级机构'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                        <Option value=''>请选择</Option>\r\n                                        {\r\n                                            (dictionariesRatingAgencies || [] ).map((it)=>{ \r\n                                                return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <FormItem label='评级分数' {...formSmallItemLayout}>\r\n                            {\r\n                                getFieldDecorator('ratingFraction', {\r\n                                    initialValue : updateInfo ? updateInfo.rating_fraction : '', \r\n                                    rules: [\r\n                                        {\r\n                                            required: this.rate,\r\n                                            message: '请填写评级分数'\r\n                                        },{\r\n                                            pattern: new RegExp(\"^([1-9]|[1-9]\\\\d|100)$\"),\r\n                                            message: '请输入正确的评级分数'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input autoComplete=\"off\"/>\r\n                                )\r\n                            }\r\n                            </FormItem>                      \r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <FormItem label='价格类型' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('priceType', {\r\n                            \r\n                            initialValue : updateInfo ? (updateInfo.price_type ? parseInt(updateInfo.price_type) : '') : '',\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择价格类型'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    (dictionariesPriceType || []).map((it)=>{ \r\n                                        return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                    <FormItem label='价格来源' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('priceSource', {\r\n                            initialValue : updateInfo ? parseInt(updateInfo.price_source) : '',\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择价格来源'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                <Option value=''>请选择</Option>\r\n                                {\r\n                                    (dictionariesPriceSource || []).map((it)=>{ \r\n                                        return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                    <FormItem label='价格' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('price', {\r\n                            initialValue : updateInfo ? String(updateInfo.goods_price) : '',\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写价格'\r\n                                },\r\n                                {\r\n                                    pattern: new RegExp(\"^[1-9]{1}[0-9]*$|^0{1}\\.{1}[0-9]+$|^[1-9]{1}[0-9]*\\.{1}[0-9]+$\"),\r\n                                    message: '请输入大于0的数字'\r\n                                },\r\n                                {\r\n                                    max: 15,\r\n                                    message: '最多输入15个字符'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input autoComplete=\"off\"/>\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                    <FormItem label='成交量' {...formBigItemLayout}>\r\n                    {\r\n                        getFieldDecorator('quantity', {\r\n                            initialValue : updateInfo ? (!updateInfo.quantity ? '' : String(updateInfo.quantity)) : '',\r\n                            rules: [\r\n                                {\r\n                                    pattern: new RegExp(/^[1-9]\\d*$/, \"g\"),\r\n                                    message: '请输入正确的成交量'\r\n                                },\r\n                                {\r\n                                    max: 15,\r\n                                    message: '最多输入15个字符'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input autoComplete=\"off\"/>\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n\r\n\r\n                    <FormItem label='备注' {...formTextItemLayout}>\r\n                    {\r\n                        getFieldDecorator('remarks', {\r\n                            initialValue : updateInfo ? updateInfo.remarks : '',\r\n                            rules: [\r\n                                {\r\n                                    max: 255,\r\n                                    message: '最多输入255个字符'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <TextArea />\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nCreateForm = Form.create({})(CreateForm);\r\n","import React from 'react' \r\nimport { Form, Input, Select, Col, Row } from 'antd'\r\nimport './../index.less'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nexport default class SearchForm extends React.Component {\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const checkSelect = this.props.checkSelect || {}     \r\n        const formWtItemLayout = {\r\n            labelCol:{\r\n               span: 8\r\n            },\r\n            wrapperCol:{\r\n                span:14\r\n            }\r\n        }\r\n        return (\r\n            <Form>  \r\n                <Row>\r\n                    <Col span= {6}>\r\n                        <FormItem label='项目名称' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('projectName', {\r\n\r\n                            })(\r\n                                <Input />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                    </Col>\r\n                    <Col span= {6}>\r\n                        <FormItem label='品种名称' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('goodsName', {\r\n\r\n                            })(\r\n                                <Input />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                    </Col>\r\n                    <Col span= {6}>\r\n                        <FormItem label='发行年份' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('issueYear', {\r\n                                initialValue: ''\r\n                            })(\r\n                                <Select  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                    <Option value=''>请选择</Option>\r\n                                    {\r\n                                        !checkSelect  ? '' :\r\n                                        (checkSelect.dictionariesYear || []).map((it, index)=>{ \r\n                                            return (<Option key={index} value={it}>{it}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )\r\n                        }                      \r\n                        </FormItem>\r\n                    </Col>\r\n                    <Col span= {6}>\r\n                    <FormItem label='币面年份' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('goodsYear', {\r\n                                initialValue: ''\r\n                            })(\r\n                                <Select  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                    <Option value=''>请选择</Option>\r\n                                    {\r\n                                        !checkSelect ? '' :\r\n                                        (checkSelect.dictionariesYear || [] ).map((it, index)=>{ \r\n                                            return (<Option key={index} value={it}>{it}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )\r\n                        }                      \r\n                    </FormItem>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span= {6}>\r\n                    <FormItem label='包装版本' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('goodsPacking', {\r\n                                initialValue: '',\r\n                            })(\r\n                                <Select  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                    <Option value=''>请选择</Option>\r\n                                    {\r\n                                        !checkSelect ? '' :\r\n                                        (checkSelect.dictionariesPacking || [] ).map((it)=>{ \r\n                                            return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )\r\n                        }                   \r\n                    </FormItem>\r\n                    </Col>\r\n                    <Col span= {6}>\r\n                    <FormItem label='价格类型' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('priceType', {\r\n                                initialValue: ''\r\n                            })(\r\n                                <Select  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                    <Option value=''>请选择</Option>\r\n                                    {\r\n                                        !checkSelect  ? '' :\r\n                                        (checkSelect.dictionariesPriceType || [] ).map((it)=>{ \r\n                                            return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    </Col>\r\n                    <Col span= {6}>\r\n                    <FormItem label='价格来源' {...formWtItemLayout}>\r\n                        {\r\n                            getFieldDecorator('priceSource', {\r\n                                initialValue: ''\r\n                            })(\r\n                                <Select className='price-select'  getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                                    <Option value=''>请选择</Option>\r\n                                    {\r\n                                        !checkSelect ? '' :\r\n                                        (checkSelect.dictionariesPriceSource || []).map((it)=>{ \r\n                                            return (<Option key={it.id} value={it.id}>{it.dictionariesValue}</Option>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    </Col>\r\n                </Row>     \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nSearchForm = Form.create({})(SearchForm);\r\n","import React, { Component } from 'react' \r\nimport { Button, Table, Modal, message,ConfigProvider } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux' \r\nimport axios from 'axios'\r\nimport moment from 'moment';\r\nimport CreateForm from './create'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport './../index.less'\r\nimport SearchForm from './search'\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\n\r\nclass ksPrice extends Component{\r\n\r\n    state = {\r\n        isVisible: false,\r\n        checkSelect: '',\r\n        checkData: {},\r\n        loadingTable: false,\r\n        saveLoading: false,\r\n        checkLoading: false,\r\n        checkBtn: false,\r\n    }\r\n\r\n    page = {\r\n        pageNo: 1,\r\n        pageSize: 10\r\n    }\r\n\r\n    requestList=()=>{\r\n        let _this = this;\r\n        //权限\r\n        let componentCode = {\r\n            componentCode: auth(menuKey.PRICE, '001').authCode\r\n        } \r\n        let query = {..._this.state.checkData, ..._this.page, ...componentCode}\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/list',  \r\n            params: query  \r\n        })\r\n        .then((res)=>{\r\n            if(res.status == '200'){\r\n                let code = res.data.code;\r\n                this.setState({\r\n                    loadingTable: false\r\n                })\r\n                if(code == '00'){  \r\n                    if(this.state.checkBtn){\r\n                        this.setState({\r\n                            checkBtn: false\r\n                        })\r\n                        message.success('查询成功');  \r\n                    }               \r\n                    (res.data.data.list || []).map((item, index)=>{\r\n                        item.key = index\r\n                    })\r\n                    this.setState({                    \r\n                        dataSource:res.data.data.list,  \r\n                        checkSelect: res.data.data,\r\n                        checkLoading: false,\r\n                        saveLoading: false,\r\n                        pagination: {\r\n                            total: res.data.data.listCount,\r\n                            current: this.page.pageNo, \r\n                            showTotal:()=>{\r\n                                return `共${res.data.data.listCount}条`\r\n                            },\r\n                            onChange: (pageNo,pageSize )=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showSizeChanger : true,\r\n                            onShowSizeChange: (pageNo,pageSize)=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showQuickJumper: {goButton:<a style={{textDecoration:\"underline\",paddingLeft:10}}>跳转</a>}\r\n                        }\r\n                    })\r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','贵金属纪念币价格']));\r\n        this.props.dispatch(set_current_menu(['price']))\r\n    } \r\n\r\n    componentDidMount () {     \r\n        let checkData = this.searchForm.props.form.getFieldsValue();\r\n        this.setState({\r\n            checkData\r\n        })\r\n        const pageNum = sessionStorage.getItem('currentPageNo')\r\n        if(pageNum){\r\n            this.page.pageNo = parseInt(pageNum)\r\n            sessionStorage.removeItem('currentPageNo')\r\n        }\r\n        setTimeout(()=>{\r\n            this.requestList()\r\n        },10) \r\n    }\r\n\r\n    //查询\r\n    handleCheck = () => {\r\n        let checkData = this.searchForm.props.form.getFieldsValue()       \r\n        this.setState({\r\n            checkData: checkData,\r\n            checkLoading: true,\r\n            checkBtn: true\r\n        })\r\n        this.page.pageNo = 1\r\n        setTimeout(()=>{\r\n            this.requestList()\r\n        },10)\r\n    }  \r\n\r\n   //重置\r\n    handleReset =()=>{\r\n        this.searchForm.props.form.resetFields();\r\n    }\r\n\r\n    //暂不添加\r\n    handleNoAddClick = () =>{\r\n        this.setState({\r\n            isVisible: false,\r\n        })\r\n        this.createForm.props.form.resetFields()\r\n    }\r\n\r\n\r\n    handleUpdate=(record)=>{\r\n        let componentCode = auth(menuKey.PRICE, '002').authCode\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/add',\r\n            params: {\r\n                componentCode: componentCode\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    this.setState({  \r\n                        isVisible: true,                  \r\n                        baseSelect: res.data.data,  \r\n                        updateInfo:  record,\r\n                        id: record.id                   \r\n                    })  \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }\r\n            }          \r\n        })\r\n        .catch(() => {\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    handleUpdateSubmit=()=>{\r\n        this.createForm.props.form.validateFields((err, values)=>{   \r\n            if(!err){\r\n                this.setState({\r\n                    saveLoading: true\r\n                }) \r\n                let data = this.createForm.props.form.getFieldsValue()\r\n                data.id = this.state.id\r\n                data.businessTime = data.businessTime.format('YYYY-MM-DD')\r\n                data.componentCode =  auth(menuKey.PRICE, '003').authCode\r\n                this.update(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    //校改保存\r\n    update =(data)=>{\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/saveUpdate',\r\n            params: data,\r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){                   \r\n                    this.setState({\r\n                        isVisible: false,\r\n                        updateInfo: ''\r\n                    })\r\n                    message.success('修改成功');\r\n                    this.requestList()               \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else {\r\n                    message.error(res.data.msg);\r\n                }\r\n            }           \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                saveLoading: false\r\n            })\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    handleClickGoodsName = (record) => {   \r\n        sessionStorage.setItem('currentPageNo', this.page.pageNo)\r\n        const goodsId = record.goods_id\r\n        const goodsName = record.goods_name\r\n        this.props.history.push('/priceenter/'+goodsId + '/'+ goodsName)\r\n    }\r\n\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:'采集人',\r\n                dataIndex:'create_user_name',\r\n                width: 60\r\n            },\r\n            {\r\n                title: '采集时间',\r\n                dataIndex: 'create_time',\r\n                width: 80,\r\n                render:(text, record)=>{\r\n                    return <span>{moment(record.create_time).format('YYYY-MM-DD') }</span>\r\n                }\r\n            },\r\n            {\r\n                title:'纪念币项目',\r\n                dataIndex:'project_id_value',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 60,wordBreak:\"break-all\"}} >{ record.project_id_value }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '纪念币名称',\r\n                dataIndex: 'goods_name',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{display: \"inline-block\",width: 60,wordBreak:\"break-all\",cursor: \"pointer\",}} onClick={()=>this.handleClickGoodsName(record)}>{ record.goods_name }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '成交时间',\r\n                dataIndex: 'business_time',\r\n            },\r\n            {\r\n                title: '包装版本',\r\n                dataIndex: 'goods_packing_value',\r\n                width: 90\r\n            },\r\n            {\r\n                title: '封装认证机构',\r\n                dataIndex: 'certification_authority_value',\r\n                width: 80,\r\n                render(state){\r\n                    return !state ? \"——\" : <span style={{width: 80, wordBreak:\"break-all\"}}>{state}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '封装评级机构',\r\n                dataIndex: 'rating_agencies_value',\r\n                width: 80,\r\n                render(state){\r\n                    return !state ? \"——\" : <span style={{width: 80, wordBreak:\"break-all\"}}>{state}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '评级分数',\r\n                dataIndex: 'rating_fraction',\r\n                width: 80,\r\n                render(state){\r\n                    return !state ? \"——\" : <span style={{width: 80, wordBreak:\"break-all\"}}>{state}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '价格类型',\r\n                dataIndex: 'price_type_value',\r\n                width: 90,\r\n            },\r\n            {\r\n                title: '价格（元）',\r\n                dataIndex: 'goods_price',\r\n                width: 60,\r\n                render: (text, record)=>{\r\n                    return <span style={{color: 'red', wordBreak:\"break-all\", width: 60}}>{record.goods_price}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '价格来源',\r\n                dataIndex: 'price_source_value',\r\n                width: 70\r\n            },\r\n            {\r\n                title: '成交数量',\r\n                dataIndex: 'quantity',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 80}}>{record.quantity}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'remarks',\r\n                width: 90,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 90}}>{record.remarks}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 70,\r\n                render: (text,record)=>{\r\n                    return auth(menuKey.PRICE, '002').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>校改</a> : ''\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (           \r\n            <div> \r\n                <div>\r\n                    <SearchForm checkSelect={this.state.checkSelect}  wrappedComponentRef={(inst) => {this.searchForm = inst }} />\r\n                </div>\r\n                <div className='keepsake-price-btn'>\r\n                    {\r\n                        auth(menuKey.PRICE, '001').isAuth ? <Button type=\"primary\" loading={this.state.checkLoading} onClick={this.handleCheck}>查询</Button> : ''\r\n                    }\r\n                    \r\n                    <Button onClick={this.handleReset}>重置</Button>\r\n                </div>\r\n                <div className='tb-style'>\r\n                    <ConfigProvider  locale={zhCN}>\r\n                        <Table                   \r\n                            bordered    \r\n                            scroll={{x: '100%'}}   \r\n                            columns={columns}\r\n                            dataSource={this.state.dataSource}\r\n                            pagination={this.state.pagination}\r\n                            loading={this.state.loadingTable}\r\n                        />\r\n                    </ConfigProvider>\r\n                </div>  \r\n                <Modal\r\n                    title='价格校改'\r\n                    width={700}\r\n                    visible={this.state.isVisible}\r\n                    onCancel={()=>{                        \r\n                        this.setState({\r\n                            isVisible: false,\r\n                        })\r\n                        this.createForm.props.form.resetFields()\r\n                    }} \r\n                    footer={ \r\n                            ([                                                            \r\n                                <Button key=\"back\" onClick={this.handleNoAddClick}>暂不添加</Button>,\r\n                                auth(menuKey.PRICE, '003').isAuth ? <Button key=\"submit\" type=\"primary\" loading={this.state.saveLoading} onClick={this.handleUpdateSubmit}>保存</Button> : '',\r\n                            ])\r\n                        }\r\n\r\n\r\n                >    \r\n                    <CreateForm baseSelect={this.state.baseSelect} updateInfo={this.state.updateInfo}  wrappedComponentRef={(inst) => {this.createForm = inst }} />             \r\n                </Modal>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(ksPrice)","import React, { Component } from 'react' \r\nimport { Button, Table, Modal,message,ConfigProvider } from 'antd'\r\nimport axios from 'axios'\r\nimport moment from 'moment';\r\nimport './../index.less'\r\nimport CreateForm from './create'\r\nimport { connect } from 'react-redux' \r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\r\n\r\nclass ksEnter extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isVisible: false,\r\n            goodsId: this.props.match.params.goodsId,\r\n            baseSelect: '',\r\n            loadingTable: false,\r\n            saveLoading: false\r\n        }\r\n    } \r\n\r\n    page = {\r\n        pageNo: 1,\r\n        pageSize: 10\r\n    }\r\n\r\n\r\n    requestList=()=>{\r\n        let _this = this;\r\n        let componentCode = auth(menuKey.PRICE, '005').authCode\r\n        this.setState({\r\n            loadingTable: true\r\n        })\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/listByGoodsId',  \r\n            params: {\r\n                pageNo: this.page.pageNo,\r\n                pageSize: this.page.pageSize,\r\n                goodsId: this.props.match.params.goodsId,\r\n                componentCode: componentCode\r\n            }    \r\n        })\r\n        .then((res)=>{\r\n            if(res.status == '200'){\r\n                let code = res.data.code;\r\n                this.setState({\r\n                    loadingTable: false\r\n                })\r\n                if(code == '00'){                \r\n                    (res.data.data.list || []).map((item, index)=>{\r\n                        item.key = index\r\n                    })\r\n                    this.setState({                    \r\n                        dataSource:res.data.data.list,  \r\n                        pagination: {\r\n                            total: res.data.data.listCount,\r\n                            current: this.page.pageNo, \r\n                            showTotal:()=>{\r\n                                return `共${res.data.data.listCount}条`\r\n                            },\r\n                            onChange: (pageNo,pageSize )=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showSizeChanger : true,\r\n                            onShowSizeChange: (pageNo,pageSize)=>{\r\n                                _this.page.pageNo = pageNo;\r\n                                _this.page.pageSize = pageSize;\r\n                                _this.requestList();\r\n                            },\r\n                            showQuickJumper: {goButton:<a style={{textDecoration:\"underline\",paddingLeft:10}}>跳转</a>}\r\n                        }\r\n                    })\r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n\r\n    //新建，校改下拉列表选项\r\n    requestSelect=()=>{\r\n        let type = this.state.formType\r\n        let componentCode = ''\r\n        type == 'update' ? componentCode = auth(menuKey.PRICE, '002').authCode : componentCode = auth(menuKey.PRICE, '006').authCode\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/add',\r\n            params: {\r\n                componentCode: componentCode\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    this.setState({  \r\n                        isVisible: true,                    \r\n                        baseSelect: res.data.data,                      \r\n                    })  \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }\r\n            }          \r\n        })\r\n        .catch(() => {\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    //进入录入价格\r\n    handleEnterCreateForm=()=>{\r\n        if(!this.state.baseSelect){\r\n            this.requestSelect()  \r\n        }else {\r\n            this.setState({\r\n                isVisible: true,\r\n            })\r\n        }   \r\n        this.setState({\r\n            title:'录入价格',\r\n            formType: 'create',\r\n            updateInfo: ''\r\n        })\r\n        \r\n    }\r\n    \r\n     //保存数据\r\n    handleSubmit = ()=> {\r\n        //获取到创建的所有值\r\n        this.createForm.props.form.validateFields((err, values)=>{\r\n            if(!err){\r\n                this.setState({\r\n                    saveLoading: true\r\n                }) \r\n                let data = this.createForm.props.form.getFieldsValue()\r\n                data.goodsId = this.state.goodsId\r\n                data.businessTime = data.businessTime.format('YYYY-MM-DD')\r\n                data.componentCode = auth(menuKey.PRICE, '007').authCode\r\n                this.submit(data);\r\n            }\r\n        })  \r\n    }  \r\n\r\n    //保存\r\n    submit =(data)=>{\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/save',\r\n            params: data      \r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    message.success('纪念币数据添加成功');\r\n                    this.setState({\r\n                        isVisible: false,\r\n                        updateInfo: '',                       \r\n                    })\r\n                    this.createForm.props.form.resetFields()\r\n                    this.requestList()                 \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else {\r\n                    message.error(res.data.msg);\r\n                }\r\n                this.setState({\r\n                    saveLoading: false,\r\n                })\r\n            }           \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                saveLoading: false,\r\n            })\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    //暂不添加\r\n    handleNoAddClick = () =>{\r\n        this.setState({\r\n            isVisible: false,\r\n        })\r\n        this.createForm.props.form.resetFields()\r\n    }\r\n\r\n     // 校改操作\r\n     handleUpdate = (record)=>{\r\n        if(!this.state.baseSelect){\r\n            this.requestSelect()  \r\n        }else (\r\n            this.setState({\r\n                isVisible: true, \r\n            })\r\n        ) \r\n        this.setState({        \r\n            title: '价格校改',\r\n            updateInfo: record,\r\n            id: record.id,\r\n            formType: 'update'\r\n        })\r\n    }\r\n\r\n     //校改保存数据\r\n     handleUptSubmit = () =>{         \r\n        this.createForm.props.form.validateFields((err, values)=>{\r\n            if(!err){\r\n                this.setState({\r\n                    saveLoading: true\r\n                }) \r\n                let data = this.createForm.props.form.getFieldsValue()\r\n                data.id = this.state.id\r\n                data.businessTime = data.businessTime.format('YYYY-MM-DD')\r\n                data.componentCode = auth(menuKey.PRICE, '003').authCode\r\n                this.update(data);\r\n            }\r\n        })\r\n    }\r\n\r\n     //校改保存\r\n     update =(data)=>{\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_goods_price/saveUpdate',\r\n            params: data,\r\n        })\r\n        .then((res) => {\r\n            if(res.status == '200'){\r\n                let code = res.data.code \r\n                if(code == '00'){ \r\n                    message.success('修改成功');\r\n                    this.setState({\r\n                        isVisible: false,\r\n                        updateInfo: '',                      \r\n                    })\r\n                    this.createForm.props.form.resetFields()\r\n                    this.requestList()                 \r\n                }else if(code == '99'){\r\n                    message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(code == '98'){\r\n                    message.error('权限验证失败');\r\n                }else {\r\n                    message.error(res.data.msg);\r\n                }\r\n                this.setState({\r\n                    saveLoading: false,\r\n                })\r\n            }           \r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                saveLoading: false,\r\n            })\r\n            message.error('数据异常重试')\r\n        });\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.dispatch(set_bread_crumb(['首页', '贵金属纪念币价格', decodeURIComponent(this.props.match.params.goodsName)+this.props.location.hash]));\r\n        this.requestList()\r\n    }\r\n  \r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:'采集人',\r\n                dataIndex:'create_user_name',\r\n                width: 110\r\n            },\r\n            {\r\n                title:'采集时间',\r\n                dataIndex:'create_time',\r\n                width: 110,\r\n                render:(text, record)=>{\r\n                    return <span>{moment(record.create_time).format('YYYY-MM-DD') }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '成交时间',\r\n                dataIndex: 'business_time',\r\n                width: 130,\r\n                render:(text, record)=>{\r\n                    return <span>{moment(record.business_time).format('YYYY-MM-DD') }</span>\r\n                }\r\n            },\r\n            {\r\n                title: '包装版本',\r\n                dataIndex: 'goods_packing_value',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 80}}>{record.goods_packing_value}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '封装认证机构',\r\n                dataIndex: 'certification_authority_value',\r\n                width: 100,\r\n                render(state){\r\n                    return !state ?'——' : state\r\n                }\r\n            },\r\n            {\r\n                title: '封装评级机构',\r\n                dataIndex: 'rating_agencies_value',\r\n                width: 80,\r\n                render(state){\r\n                    return !state ? '——' : state\r\n                }\r\n            },\r\n            {\r\n                title: '评级分数',\r\n                dataIndex: 'rating_fraction',\r\n                width: 80,\r\n                render(state){\r\n                    return !state ? '——' : state\r\n                }\r\n            },\r\n            {\r\n                title: '价格类型',\r\n                dataIndex: 'price_type_value',\r\n                width: 100\r\n            },\r\n            {\r\n                title: '价格（元）',\r\n                dataIndex: 'goods_price',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 80}}>{record.goods_price}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '价格来源',\r\n                dataIndex: 'price_source_value',\r\n                width: 80\r\n            },\r\n            {\r\n                title: '成交数量',\r\n                dataIndex: 'quantity',\r\n                width: 80,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 80}}>{record.quantity}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'remarks',\r\n                width: 100,\r\n                render: (text, record)=>{\r\n                    return <span style={{wordBreak:\"break-all\", width: 100}}>{record.remarks}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '操作', \r\n                width: 80,\r\n                render: (text,record)=>{\r\n                    return auth(menuKey.PRICE, '002').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>校改</a> : ''\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (           \r\n            <div>       \r\n                <div className='price-enter-btn'>\r\n                    {\r\n                        auth(menuKey.PRICE, '006').isAuth ? <Button type=\"primary\" onClick={this.handleEnterCreateForm}>录入采集价格</Button> : ''\r\n                    }\r\n                                    \r\n                </div>\r\n                <div className='tb-style'>\r\n                    <div className='price-title'>已采集价格</div>\r\n                    <ConfigProvider  locale={zhCN}>\r\n                        <Table                   \r\n                            bordered    \r\n                            columns={columns}\r\n                            dataSource={this.state.dataSource}\r\n                            pagination={this.state.pagination}\r\n                            loading={this.state.loadingTable}\r\n                        />\r\n                    </ConfigProvider>                \r\n                </div>  \r\n                <Modal\r\n                    title={this.state.title}\r\n                    width={700}\r\n                    visible={this.state.isVisible}\r\n                    destroyOnClose= {true}\r\n                    onCancel={()=>{                       \r\n                        this.setState({\r\n                            isVisible: false,\r\n                            updateInfo: ''\r\n                        })\r\n                        this.createForm.props.form.resetFields()\r\n                    }}\r\n                    footer={\r\n                        this.state.formType == 'update' ? \r\n                            ([                                                                                      \r\n                                <Button key=\"submit\" type=\"primary\" loading={this.state.saveLoading} onClick={this.handleUptSubmit}>确定校改</Button>,\r\n                            ]) : \r\n                            ([                                                                                           \r\n                                <Button key=\"submit\" type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSubmit}>保存</Button>,\r\n                                <Button key=\"back\" onClick={this.handleNoAddClick}>取消</Button>,\r\n                            ])\r\n                    }\r\n                >    \r\n                    <CreateForm baseSelect={this.state.baseSelect} updateInfo={this.state.updateInfo}  wrappedComponentRef={(inst) => {this.createForm = inst }} />             \r\n                </Modal>     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(ksEnter)","import React, { Component } from 'react'  \r\nimport { Form, Input } from 'antd'   \r\n\r\nconst FormItem = Form.Item \r\n\r\nclass OtherForm extends Component{\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form\r\n        const { modalData, fromData } = this.props \r\n        return (\r\n            <Form labelCol={{span:8}} wrapperCol={{span: 16}}>\r\n                <FormItem label={fromData.cnName}>\r\n                {\r\n                    getFieldDecorator(`${fromData.key}`, {\r\n                        initialValue: modalData[fromData.key],\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                whitespace: true,\r\n                                message: `${fromData.cnName}不能为空`\r\n                            },\r\n                            {\r\n                                max: 50,\r\n                                message: `${fromData.cnName}最多输入50个字符`\r\n                            } \r\n                        ]\r\n                    })(\r\n                        <Input autoComplete=\"off\" />\r\n                    )\r\n                }\r\n                </FormItem>\r\n            </Form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(OtherForm);","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Grade extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '鉴定评级机构',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.GRADE, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.GRADE, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_rating_agencies/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','鉴定评级机构']));\r\n        this.props.dispatch(set_current_menu(['grade']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_rating_agencies/list',\r\n            params: {\r\n                componentCode: auth(menuKey.GRADE, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.GRADE, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_rating_agencies/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='鉴定评级机构'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '鉴定评级机构不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '鉴定评级机构最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.GRADE, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.GRADE, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>               \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '鉴定评级机构', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Grade));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList'\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN' \r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Identify extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '封装认证机构',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.IDENTIFY, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.IDENTIFY, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_certification_authority/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','封装认证机构']));\r\n        this.props.dispatch(set_current_menu(['identify']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_certification_authority/list',\r\n            params: {\r\n                componentCode: auth(menuKey.IDENTIFY, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.IDENTIFY, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_certification_authority/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='封装认证机构'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '封装认证机构不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '封装认证机构最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.IDENTIFY, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.IDENTIFY, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>      \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '封装认证机构', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Identify));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Material extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '材质名称',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.MATERIAL, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.MATERIAL, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_material/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','材质']));\r\n        this.props.dispatch(set_current_menu(['material']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_material/list',\r\n            params: {\r\n                componentCode: auth(menuKey.MATERIAL, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.MATERIAL, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_material/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='材质名称'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '材质名称不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '材质名称最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.MATERIAL, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.MATERIAL, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>        \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '材质名称', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Material));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Pack extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '包装版本',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.PACK, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.PACK, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_packing/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','包装版本']));\r\n        this.props.dispatch(set_current_menu(['pack']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_packing/list',\r\n            params: {\r\n                componentCode: auth(menuKey.PACK, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.PACK, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_packing/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='包装版本'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '包装版本不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '包装版本最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PACK, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PACK, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>         \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '包装版本', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Pack));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass PriceFrom extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '价格来源',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.PRICEFROM, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.PRICEFROM, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_price_source/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','价格来源']));\r\n        this.props.dispatch(set_current_menu(['priceFrom']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_price_source/list',\r\n            params: {\r\n                componentCode: auth(menuKey.PRICEFROM, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.PRICEFROM, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_price_source/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='价格来源'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '价格来源不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '价格来源最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PRICEFROM, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PRICEFROM, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>  \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '价格来源', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(PriceFrom));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass PriceType extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '价格类型',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.PRICETYPE, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.PRICETYPE, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_price_type/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','价格类型']));\r\n        this.props.dispatch(set_current_menu(['priceType']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_price_type/list',\r\n            params: {\r\n                componentCode: auth(menuKey.PRICETYPE, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.PRICETYPE, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_price_type/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='价格类型'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '价格类型不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '价格类型最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PRICETYPE, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PRICETYPE, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>      \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '价格类型', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(PriceType));","import React, { Component } from 'react'  \r\nimport { Form, Input, DatePicker } from 'antd' \r\nimport locale from 'antd/es/date-picker/locale/zh_CN'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass ProjectForm extends Component{\r\n\r\n    constructor() {\r\n        super()  \r\n        this.state = {\r\n            Idate: null,\r\n            Adate: null \r\n        }\r\n    }\r\n\r\n    handleAd(date, dateString) { \r\n        this.setState({\r\n            Adate: dateString\r\n        })\r\n    }\r\n\r\n    handleId(date, dateString) {\r\n        this.setState({\r\n            Idate: dateString\r\n        })\r\n    }\r\n\r\n    formData() {\r\n        let data = this.props.form.getFieldsValue() \r\n        data['announcementDay'] = this.state.Adate\r\n        data['issuanceDay'] = this.state.Idate\r\n        return data\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.setState({\r\n            Adate: this.props.modalData.announcementDay,\r\n            Idate: this.props.modalData.issuanceDay\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        const modalData = this.props.modalData      \r\n        return (\r\n            <Form labelCol={{span:5}} wrapperCol={{span: 18}}>\r\n                <FormItem label='项目名称'>\r\n                {\r\n                    getFieldDecorator('projectName', {\r\n                        initialValue: modalData.projectName,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                whitespace: true,\r\n                                message: '项目名称不能为空'\r\n                            },\r\n                            {\r\n                                max: 50,\r\n                                message: '项目名称最多输入50个字符'\r\n                            } \r\n                        ]\r\n                    })(\r\n                        <Input autoComplete=\"off\" />\r\n                    )\r\n                }\r\n                </FormItem>\r\n                <FormItem label='项目简称'>\r\n                {\r\n                    getFieldDecorator('abbreviationName', {\r\n                        initialValue: modalData.abbreviationName,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                whitespace: true,\r\n                                message: '项目简称不能为空'\r\n                            },\r\n                            {\r\n                                max: 30,\r\n                                message: '项目简称最多输入30个字符'\r\n                            } \r\n                        ]\r\n                    })(\r\n                        <Input autoComplete=\"off\" />\r\n                    )\r\n                }\r\n                </FormItem>\r\n                <FormItem label='公告日'>\r\n                {\r\n                    getFieldDecorator('announcementDay', { \r\n                        initialValue: modalData.announcementDay ? moment(modalData.announcementDay, 'YYYY-MM-DD') : null\r\n                    })(\r\n                        <DatePicker locale={locale} format={'YYYY-MM-DD'} onChange={this.handleAd.bind(this)} />\r\n                    ) \r\n                }     \r\n                </FormItem>\r\n                <FormItem label='发行日'>\r\n                {\r\n                    getFieldDecorator('issuanceDay', {\r\n                        initialValue: moment(modalData.issuanceDay, 'YYYY-MM-DD'),\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择发行日'\r\n                            } \r\n                        ]\r\n                    })(\r\n                        <DatePicker  locale={locale} format={'YYYY-MM-DD'} onChange={this.handleId.bind(this)}/>\r\n                    )\r\n                }\r\n                </FormItem> \r\n            </Form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(ProjectForm);","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, DatePicker, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport locale from 'antd/es/date-picker/locale/zh_CN'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport ProjectForm from './form/projectForm'\r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Project extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false,\r\n            Idate: null,\r\n            Adate: null,\r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 50 \r\n        }, \r\n        {\r\n            title: '项目名称',\r\n            key: 'projectName',\r\n            dataIndex: 'projectName',\r\n            width: 130 \r\n        },\r\n        { \r\n            title: '项目简称',\r\n            key: 'abbreviationName',\r\n            dataIndex: 'abbreviationName',\r\n            width: 100 \r\n        },\r\n        {\r\n            title: '发行年份',\r\n            key: 'issueYear',\r\n            dataIndex: 'issueYear',\r\n            width: 60 \r\n        },\r\n        {\r\n            title: '公告日',\r\n            key: 'announcementDay',\r\n            dataIndex: 'announcementDay',\r\n            width: 60 \r\n        },\r\n        {\r\n            title: '发行日',\r\n            key: 'issuanceDay',\r\n            dataIndex: 'issuanceDay',\r\n            width: 100 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.PROJECT, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue() \r\n            data['announcementDay'] = this.state.Adate\r\n            data['issuanceDay'] = this.state.Idate\r\n            data['componentCode'] = auth(menuKey.PROJECT, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_project/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    handleAd(date, dateString) { \r\n        this.setState({\r\n            Adate: dateString\r\n        })\r\n    }\r\n\r\n    handleId(date, dateString) {\r\n        this.setState({\r\n            Idate: dateString\r\n        })\r\n    }\r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','纪念币项目']));\r\n        this.props.dispatch(set_current_menu(['project']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_project/list',\r\n            params: {\r\n                componentCode: auth(menuKey.PROJECT, '001').authCode \r\n            } \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.projectForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.projectForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.projectForm.formData()} \r\n            data['componentCode'] = auth(menuKey.PROJECT, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_project/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        let issueYear = row.issuanceDay\r\n        issueYear = issueYear.substr(0, 4)\r\n        row.issueYear = issueYear\r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='项目名称'>\r\n                        {\r\n                            getFieldDecorator('projectName', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '项目名称不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '项目名称最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem label='项目简称'>\r\n                        {\r\n                            getFieldDecorator('abbreviationName', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '项目简称不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 30,\r\n                                        message: '项目简称最多输入30个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label='公告日'>\r\n                            {\r\n                                getFieldDecorator('announcementDay', { \r\n                                })(\r\n                                    <DatePicker locale={locale} format={'YYYY-MM-DD'} onChange={this.handleAd.bind(this)} />\r\n                                )\r\n                            }                      \r\n                        </FormItem>\r\n                        <FormItem label='发行日'>\r\n                            {\r\n                                getFieldDecorator('issuanceDay', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择发行日'\r\n                                        } \r\n                                    ]\r\n                                })(\r\n                                    <DatePicker locale={locale} format={'YYYY-MM-DD'} onChange={this.handleId.bind(this)}/>\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PROJECT, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button> : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.PROJECT, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button> : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>       \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <ProjectForm modalData={this.state.currentData} wrappedComponentRef={(form) => { this.projectForm = form }}></ProjectForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Project));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Shape extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '形状',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.SHAPE, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.SHAPE, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_shape/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','形状']));\r\n        this.props.dispatch(set_current_menu(['shape']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_shape/list',\r\n            params: {\r\n                componentCode: auth(menuKey.SHAPE, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.SHAPE, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_shape/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='形状'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '形状不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '形状最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.SHAPE, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.SHAPE, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>  \r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '形状', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Shape));","import React, { Component } from 'react'  \r\nimport { Form, Input, Button, Table, Modal, Message, ConfigProvider } from 'antd'\r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport OtherForm from './form/otherForm' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Weight extends Component{\r\n\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            visible: false,\r\n            saveLoading: false, \r\n            loadingTable: true,\r\n            data: [],\r\n            currentData: {},\r\n            modelLoading: false \r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'编号',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 110 \r\n        }, \r\n        {\r\n            title: '重量单位',\r\n            key: 'dictionariesValue',\r\n            dataIndex: 'dictionariesValue',\r\n            width: 180 \r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            width: 60,\r\n            dataIndex: \"operation\",\r\n            render:(text, record)=>{  \r\n                return auth(menuKey.WEIGHT, '004').isAuth ? <a onClick={() => { this.handleUpdate(record) }}>修改</a> : ''\r\n            }\r\n        }\r\n    ] \r\n\r\n    handleUpdate(record) {\r\n        this.setState({\r\n            visible: true,\r\n            currentData: record\r\n        })\r\n    }\r\n\r\n    handleSave() { \r\n        this.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = this.props.form.getFieldsValue()  \r\n            data['componentCode'] = auth(menuKey.WEIGHT, '003').authCode \r\n            this.setState({\r\n                saveLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_weight/save',\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                if(res.data.code == '00'){\r\n                    let resData = res.data.data\r\n                    resData['key'] = res.data.id\r\n                    const newData = [...this.state.data]\r\n                    newData.unshift(resData) \r\n                    this.setState({\r\n                        data: newData\r\n                    })\r\n                    this.resetForm()\r\n                    Message.success('保存成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    saveLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        this.props.form.resetFields()\r\n    } \r\n\r\n    componentWillMount() { \r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','重量单位']));\r\n        this.props.dispatch(set_current_menu(['weight']))\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/busi_dictionaries_weight/list',\r\n            params: {\r\n                componentCode: auth(menuKey.WEIGHT, '001').authCode \r\n            }  \r\n        })\r\n        .then((res) => {\r\n            if(res.data.code == '00'){\r\n                let data = res.data.data\r\n                data.map((item,index)=>{\r\n                    item.key = index\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n                loadingTable: false\r\n            })\r\n        })\r\n        .catch(() => { \r\n            Message.error('系统异常重试')\r\n        }); \r\n    }\r\n\r\n    cancelModel() {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n        this.otherForm.props.form.resetFields()\r\n    }\r\n\r\n    saveModel() {\r\n        this.otherForm.props.form.validateFields((error) => { \r\n            if(error) {\r\n                return;\r\n            }\r\n            let data = {...this.state.currentData, ...this.otherForm.props.form.getFieldsValue()} \r\n            data['componentCode'] = auth(menuKey.WEIGHT, '005').authCode \r\n            this.setState({ \r\n                modelLoading: true\r\n            })\r\n            axios({\r\n                method: 'post',\r\n                url: '/manager/busi_dictionaries_weight/saveUpdate',\r\n                params: data\r\n            })\r\n            .then((res) => { \r\n                if(res.data.code == '00'){\r\n                    this.cancelModel()\r\n                    this.handleUpdateRow(data)\r\n                    Message.success('修改成功')\r\n                }else if(res.data.code == '99'){\r\n                    Message.error('登录失败，请重新登录', () => {\r\n                        this.props.history.push('/login') \r\n                    });\r\n                }else if(res.data.code == '98'){\r\n                    Message.error('权限验证失败');\r\n                }\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ \r\n                    modelLoading: false\r\n                })\r\n                Message.error('系统异常重试')\r\n            }); \r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {   \r\n        const newData = [...this.state.data];\r\n        const index = newData.findIndex(item => row.key == item.key);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ data: newData });\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form \r\n        return (\r\n            <div> \r\n                <div>\r\n                    <Form id=\"no_inline_bottom\" layout='inline'>                                 \r\n                        <FormItem label='重量单位'>\r\n                        {\r\n                            getFieldDecorator('dictionariesValue', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        whitespace: true,\r\n                                        message: '重量单位不能为空'\r\n                                    },\r\n                                    {\r\n                                        max: 50,\r\n                                        message: '重量单位最多输入50个字符'\r\n                                    } \r\n                                ]\r\n                            })(\r\n                                <Input autoComplete=\"off\" />\r\n                            )\r\n                        }                     \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.WEIGHT, '002').isAuth ? <Button type=\"primary\" loading={this.state.saveLoading} onClick={this.handleSave.bind(this)}>增加</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                auth(menuKey.WEIGHT, '002').isAuth ? <Button onClick={this.resetForm.bind(this)}>重置</Button>  : ''\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n                <div className='tb-style'>\r\n                <ConfigProvider  locale={zhCN}>\r\n                    <Table                   \r\n                        bordered    \r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}  \r\n                        pagination={false}\r\n                        loading={this.state.loadingTable}\r\n                    />\r\n                </ConfigProvider>\r\n                </div>\r\n                <Modal \r\n                    title='修改'\r\n                    width={400}\r\n                    visible={this.state.visible}\r\n                    okText= '确认'\r\n                    cancelText= '取消' \r\n                    onCancel={this.cancelModel.bind(this)}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.cancelModel.bind(this)}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.modelLoading} onClick={this.saveModel.bind(this)}>\r\n                            确认\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <OtherForm modalData={this.state.currentData} fromData={{'cnName': '重量单位', 'key': 'dictionariesValue'}} wrappedComponentRef={(form) => { this.otherForm = form }}></OtherForm>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(connect()(Weight));","import React, { Component } from 'react'  \r\nimport { Form, Input, Modal, Button, Table, Message, Row, Col, Checkbox, ConfigProvider } from 'antd'\r\nimport { withRouter } from 'react-router-dom'    \r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux' \r\nimport { set_bread_crumb } from '../../../reducer/breadCrumb'  \r\nimport { set_current_menu } from '../../../reducer/switchMenu' \r\nimport auth from '../../../auth/index'\r\nimport { menuKey } from '../../../config/menuList' \r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\n\r\nconst FormItem = Form.Item \r\n\r\nclass Manager extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loading: false,\r\n            loadingTable: true,\r\n            dataSource: [],\r\n            isUpdate: false,\r\n            updateId: null,\r\n            rowData: {},\r\n            stopState: true,\r\n            resetPwdState: true\r\n        }\r\n    }\r\n\r\n    formSpl = {\r\n        labelCol: {\r\n            span: 5\r\n        },\r\n        wrapperCol: {\r\n            span: 16\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title:'用户ID',\r\n            key:'id',\r\n            dataIndex:'id',\r\n            width: 30\r\n        },\r\n        {\r\n            title: '用户状态',\r\n            key: 'userStatus',\r\n            dataIndex: 'userStatus',\r\n            width: 100,\r\n            render: (item) => { \r\n                return item == 'ACT' ? '启用' : '停用' \r\n            }\r\n        },\r\n        {\r\n            title: '账号',\r\n            key: 'loginName',\r\n            dataIndex: 'loginName',\r\n            width: 100\r\n        },\r\n        {\r\n            title: '姓名',\r\n            key: 'realName',\r\n            dataIndex: 'realName',\r\n            width: 80\r\n        },\r\n        {\r\n            title: '手机号',\r\n            key: 'mobile',\r\n            dataIndex: 'mobile',\r\n            width: 60\r\n        },\r\n        {\r\n            title: '角色',\r\n            key: 'roleNames',\r\n            dataIndex: 'roleNames',\r\n            width: 60\r\n        },\r\n        {\r\n            title: '操作',\r\n            width: 100,\r\n            render:(record)=>{ \r\n                return (\r\n                    <div>\r\n                        {\r\n                            auth(menuKey.MANAGER, '004').isAuth ? (<a onClick={() => { this.handleUpdate(record)}}> 修改 </a> ) : ''\r\n                        }\r\n                        {\r\n                            record.userStatus == 'ACT' ? \r\n                            auth(menuKey.MANAGER, '007').isAuth ? <a onClick={() => { this.handleStopDown(record) }}> 停用 </a> : ''\r\n                            :\r\n                            auth(menuKey.MANAGER, '006').isAuth ? <a onClick={() => { this.handleStopUp(record) }}> 启用 </a> : ''\r\n                        }\r\n                        {\r\n                            auth(menuKey.MANAGER, '008').isAuth ? <a onClick={() => { this.handleResetPwd(record) }}> 重置密码 </a> : ''\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    handleUpdate(row) {  \r\n        this.props.form.setFieldsValue({\r\n            loginName: row.loginName,\r\n            realName: row.realName,\r\n            mobile: row.mobile,\r\n            roleIds: row.roleIds\r\n        })\r\n        this.setState({\r\n            isUpdate: true,\r\n            updateId: row.userId\r\n        })  \r\n    }\r\n\r\n    handUpdateUser() {\r\n        this.props.form.validateFields((err) => { \r\n            if (!err) {\r\n                let data = this.props.form.getFieldsValue()   \r\n                data['roleIds'] = data.roleIds.join(',')\r\n                data['componentCode'] = auth(menuKey.MANAGER, '005').authCode \r\n                data['userId'] = this.state.updateId\r\n                this.setState({\r\n                    loading: true\r\n                })\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/manager/core_user/saveUpdate',\r\n                    params: data\r\n                })\r\n                .then((res) => { \r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    let code = res.data.code \r\n                    if(code == '00'){\r\n                        this.handleUpdateRow(res.data.data.coreUser)\r\n                        this.cancelForm('isUpdate')\r\n                        Message.success('账户修改成功');\r\n                    }else if(code == '98'){\r\n                        Message.error('权限验证失败');\r\n                    }else if(code == '99'){\r\n                        Message.error('登录失败，请重新登录', () => {\r\n                            this.props.history.push('/login') \r\n                        });\r\n                    }else{\r\n                        Message.error(res.data.msg);\r\n                    }\r\n                })\r\n                .catch(() => { \r\n                    Message.error('系统异常请重试');\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUpdateRow(row) {  \r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.userId == item.userId);\r\n        const item = newData[index];   \r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        }); \r\n        this.setState({ dataSource: newData });\r\n    }\r\n\r\n    handleSaveRow(row) {  \r\n        const newData = [...this.state.dataSource];\r\n        row['key'] = this.state.dataSource.length\r\n        row['id'] = this.state.dataSource.length + 1\r\n        newData.push(row) \r\n        this.setState({ dataSource: newData });\r\n    }\r\n\r\n    handleStopUp(row) {\r\n        if(!this.state.stopState) return;\r\n        Modal.confirm({\r\n            title: `您确定启用${row.realName}的账户?`, \r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.setState({\r\n                    stopState: false\r\n                })\r\n                Message.loading('正在执行...', 0)\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/manager/core_user/startUp',\r\n                    params: {\r\n                        userId: row.userId,\r\n                        componentCode: auth(menuKey.MANAGER, '006').authCode \r\n                    }\r\n                })\r\n                .then((res) => { \r\n                    this.setState({\r\n                        stopState: true\r\n                    })\r\n                    Message.destroy()\r\n                    if(res.data.code == '00'){\r\n                        row['userStatus'] = 'ACT'\r\n                        this.handleUpdateRow(row)\r\n                        Message.success(`已启用${row.realName}的账户`)\r\n                    }else if(res.data.code == '99'){\r\n                        Message.error('登录失败，请重新登录', () => {\r\n                            this.props.history.push('/login') \r\n                        });\r\n                    }else if(res.data.code == '98'){\r\n                        Message.error('权限验证失败');\r\n                    }else{\r\n                        Message.error(res.data.msg);\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleStopDown(row) {\r\n        if(!this.state.stopState) return;\r\n        Modal.confirm({\r\n            title: `您确定停用${row.realName}的账户?`, \r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.setState({\r\n                    stopState: false\r\n                })\r\n                Message.loading('正在执行...', 0)\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/manager/core_user/startDown',\r\n                    params: {\r\n                        userId: row.userId,\r\n                        componentCode: auth(menuKey.MANAGER, '007').authCode \r\n                    }\r\n                })\r\n                .then((res) => { \r\n                    this.setState({\r\n                        stopState: true\r\n                    })\r\n                    Message.destroy()\r\n                    if(res.data.code == '00'){\r\n                        row['userStatus'] = 'NOACT'\r\n                        this.handleUpdateRow(row)\r\n                        Message.success(`已停用${row.realName}的账户`)\r\n                    }else if(res.data.code == '99'){\r\n                        Message.error('登录失败，请重新登录', () => {\r\n                            this.props.history.push('/login') \r\n                        });\r\n                    }else if(res.data.code == '98'){\r\n                        Message.error('权限验证失败');\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleResetPwd(row) {\r\n        if(!this.state.resetPwdState) return;\r\n        Modal.confirm({\r\n            title: `您确定重置${row.realName}的密码?`, \r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.setState({\r\n                    resetPwdState: false\r\n                })\r\n                Message.loading('正在执行...', 0)\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/manager/core_user/initPwd',\r\n                    params: {\r\n                        userId: row.userId,\r\n                        componentCode: auth(menuKey.MANAGER, '008').authCode \r\n                    }\r\n                })\r\n                .then((res) => { \r\n                    this.setState({\r\n                        resetPwdState: true\r\n                    })\r\n                    Message.destroy()\r\n                    if(res.data.code == '00'){ \r\n                        Message.success(`已重置${row.realName}的密码`)\r\n                    }else if(res.data.code == '99'){\r\n                        Message.error('登录失败，请重新登录', () => {\r\n                            this.props.history.push('/login') \r\n                        });\r\n                    }else if(res.data.code == '98'){\r\n                        Message.error('权限验证失败');\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(set_bread_crumb(['首页','系统管理','枚举管理','用户管理']));\r\n        this.props.dispatch(set_current_menu(['manager'])); \r\n    }\r\n\r\n    componentDidMount () {\r\n        axios({\r\n            method: 'post',\r\n            url: '/manager/core_user/list',\r\n            params: {\r\n                componentCode: auth(menuKey.MANAGER, '001').authCode \r\n            }\r\n        })\r\n        .then((res) => { \r\n            let data = res.data.data\r\n            if(res.data.code == '00'){\r\n                data.map((item,index)=>{\r\n                    item.key = index;\r\n                    item.id = index + 1;\r\n                })\r\n            }else if(res.data.code == '99'){\r\n                Message.error('登录失败，请重新登录', () => {\r\n                    this.props.history.push('/login') \r\n                });\r\n            }else if(res.data.code == '98'){\r\n                Message.error('权限验证失败');\r\n            }\r\n            this.setState({\r\n                dataSource: data,\r\n                loadingTable: false\r\n            })\r\n        }) \r\n    }\r\n\r\n    handSaveUser() { \r\n        this.props.form.validateFields((err) => { \r\n            if (!err) {\r\n                let data = this.props.form.getFieldsValue()  \r\n                data['roleIds'] = data.roleIds.join(',')\r\n                data['componentCode'] = auth(menuKey.MANAGER, '003').authCode \r\n                this.setState({\r\n                    loading: true\r\n                })\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/manager/core_user/save',\r\n                    params: data\r\n                })\r\n                .then((res) => { \r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    let code = res.data.code \r\n                    if(code == '00'){\r\n                        this.handleSaveRow(res.data.data.coreUser)\r\n                        this.cancelForm()\r\n                        Message.success('账户添加成功');\r\n                    }else if(code == '99'){\r\n                        Message.error('登录失败，请重新登录', () => {\r\n                            this.props.history.push('/login') \r\n                        });\r\n                    }else if(code == '98'){\r\n                        Message.error('权限验证失败');\r\n                    }else{\r\n                        Message.error(res.data.msg);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    Message.error('系统异常请重试');\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    cancelForm(type) {\r\n        if(type == 'isUpdate'){\r\n            this.setState({\r\n                isUpdate: false,\r\n                updateId: null,\r\n                rowData: {}\r\n            })\r\n        }\r\n        this.props.form.resetFields()\r\n    }\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n               span: 8\r\n            },\r\n            wrapperCol:{\r\n                span:14\r\n            }\r\n        }\r\n        return (         \r\n            <Row>\r\n                <Col span={14}>\r\n                    <div className=\"tb-style\" style={{\r\n                        marginTop: 0\r\n                    }}> \r\n                        <ConfigProvider  locale={zhCN}>\r\n                            <Table                   \r\n                                bordered    \r\n                                columns={this.columns}\r\n                                dataSource={this.state.dataSource} \r\n                                pagination={false}\r\n                                loading={this.state.loadingTable}\r\n                            />\r\n                        </ConfigProvider>\r\n                        \r\n                    </div>\r\n                </Col>\r\n                <Col span={1}></Col>\r\n                <Col span={9}>\r\n                    <Form {...this.formSpl}>      \r\n                        <Row style={{\r\n                            paddingTop: 20\r\n                        }}>\r\n                            <Col span={12}>\r\n                                                        \r\n                                    <FormItem label='账号' {...formItemLayout}>\r\n                                    {\r\n                                        getFieldDecorator('loginName', {\r\n                                            rules: [\r\n                                                {\r\n                                                    required: true,\r\n                                                    whitespace: true,\r\n                                                    message: '账号不能为空',\r\n                                                },\r\n                                                {\r\n                                                    max: 15,\r\n                                                    message: '账号最多输入15个字符',\r\n                                                },{\r\n                                                    pattern: /^[0-9a-zA-Z]+$/,\r\n                                                    message: '格式不正确',\r\n                                                }\r\n                                            ]\r\n                                        })(\r\n                                            <Input autoComplete=\"off\" />\r\n                                        )\r\n                                    }                     \r\n                                    </FormItem>\r\n                                    <FormItem label='姓名' {...formItemLayout}>\r\n                                    {\r\n                                        getFieldDecorator('realName', {\r\n                                            rules: [\r\n                                                {\r\n                                                    required: true,\r\n                                                    whitespace: true,\r\n                                                    message: '姓名不能为空',\r\n                                                },\r\n                                                {\r\n                                                    max: 30,\r\n                                                    message: '账号最多输入30个字符',\r\n                                                }\r\n                                            ]\r\n                                        })(\r\n                                            <Input autoComplete=\"off\" />\r\n                                        )\r\n                                    }\r\n                                    </FormItem>\r\n                                    <FormItem label='手机号' {...formItemLayout}>\r\n                                    {\r\n                                        getFieldDecorator('mobile', {\r\n                                            rules: [\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: '手机号不能为空'\r\n                                                },\r\n                                                {\r\n                                                    whitespace: true,\r\n                                                    message: '手机号不能为空'\r\n                                                },\r\n                                                {\r\n                                                    pattern: /^1\\d{10}$/,\r\n                                                    message: '手机号格式不正确'\r\n                                                } \r\n                                            ]\r\n                                        })(\r\n                                            <Input autoComplete=\"off\" maxLength={11} />\r\n                                        )\r\n                                    }\r\n                                    </FormItem>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Row>\r\n                                    <Col>角色:</Col>\r\n                                </Row> \r\n                                <Row>\r\n                                    <Col>\r\n                                        <FormItem>\r\n                                        {\r\n                                            getFieldDecorator('roleIds', { \r\n                                                rules: [\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: '请设置角色'\r\n                                                    } \r\n                                                ]\r\n                                            })(\r\n                                                <Checkbox.Group>\r\n                                                    <div style={{marginTop: 10}}>\r\n                                                        <Checkbox value=\"b22ca12f1db64004afd4f8c1c3a931b5\">数据录入</Checkbox>\r\n                                                    </div>\r\n                                                    <div style={{marginTop: 10}}>\r\n                                                        <Checkbox value=\"a600974ad0ed45818cfb91706627f398\">数据校改</Checkbox>\r\n                                                    </div>\r\n                                                    <div style={{marginTop: 10}}>\r\n                                                        <Checkbox value=\"55fab9a4afcb415e9042c9e57572e453\">数据报送-马甸</Checkbox>\r\n                                                    </div>\r\n                                                    <div style={{marginTop: 10}}>\r\n                                                        <Checkbox value=\"d20fb7f1540645308b8fe3e8e3ab6b60\">数据报送-卢工</Checkbox>\r\n                                                    </div>\r\n                                                </Checkbox.Group>\r\n                                            )\r\n                                        }\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row> \r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{\r\n                                textAlign: \"center\"\r\n                            }}>\r\n                                    {\r\n                                        !this.state.isUpdate ? \r\n                                        auth(menuKey.MANAGER, '003').isAuth ? \r\n                                            (<FormItem>\r\n                                                <Button loading={this.state.loading} onClick={this.handSaveUser.bind(this)} type=\"primary\" htmlType=\"submit\">添加账户</Button> <Button onClick={this.cancelForm.bind(this)}>重置</Button>  \r\n                                            </FormItem>) : ''\r\n                                        :\r\n                                        auth(menuKey.MANAGER, '005').isAuth ? \r\n                                            (<FormItem>\r\n                                                <Button loading={this.state.loading} onClick={this.handUpdateUser.bind(this)} type=\"primary\" htmlType=\"submit\">修改账户</Button> <Button onClick={this.cancelForm.bind(this, 'isUpdate')}>取消</Button>\r\n                                            </FormItem>) : ''\r\n                                    }\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(withRouter(connect()(Manager)));\r\n\r\n\r\n","import React, { Component } from 'react'\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom' \nimport App from './app'\nimport Welcome from './pages/welcome'\nimport Login from './pages/login'\nimport KindList from './pages/keepsake/kind'\nimport PriceList from './pages/keepsake/price'\nimport PriceEnter from './pages/keepsake/price/enter'\nimport Grade from './pages/system/dict/grade'\nimport Identify from './pages/system/dict/identify'\nimport Material from './pages/system/dict/material'\nimport Pack from './pages/system/dict/pack'\nimport PriceFrom from './pages/system/dict/priceFrom'\nimport PriceType from './pages/system/dict/priceType'\nimport Project from './pages/system/dict/project'\nimport Shape from './pages/system/dict/shape'\nimport Weight from './pages/system/dict/weight'\nimport Manager from './pages/system/manager'\n\nexport default class ERouter extends Component{\n\n    render(){\n        return (\n            <HashRouter> \n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route render={()=>\n                        <App>\n                            <Switch> \n                                <Route path='/welcome' component={Welcome} />\n                                <Route path=\"/kind\" component={KindList} />\n                                <Route path=\"/price\" component={PriceList} />\n                                <Route path=\"/priceenter/:goodsId/:goodsName\" component={PriceEnter} />                               \n                                <Route path=\"/system/grade\" component={Grade} />\n                                <Route path=\"/system/identify\" component={Identify} />\n                                <Route path=\"/system/material\" component={Material} />\n                                <Route path=\"/system/pack\" component={Pack} />\n                                <Route path=\"/system/priceFrom\" component={PriceFrom} />\n                                <Route path=\"/system/priceType\" component={PriceType} />\n                                <Route path=\"/system/project\" component={Project} />\n                                <Route path=\"/system/shape\" component={Shape} />\n                                <Route path=\"/system/weight\" component={Weight} />\n                                <Route path=\"/system/manager\" component={Manager} />  \n                            </Switch>\n                        </App>         \n                    } /> \n                    <Redirect to=\"/login\"/>\n                </Switch> \n            </HashRouter>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configStroe from './store'\nimport './index.less';\nimport Router from './router'; \n\nconst store = configStroe();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router />\n    </Provider>,\n    document.getElementById('root')\n);  \n"],"sourceRoot":""}